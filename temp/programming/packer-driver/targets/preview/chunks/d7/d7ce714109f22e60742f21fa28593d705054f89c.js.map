{"version":3,"sources":["file:///D:/Project/cocos/test/assets/script/Mass.ts"],"names":["_decorator","Component","Material","MeshRenderer","Vec3","Vec4","ccclass","property","Mass","Number","assetMgr","mat","followPos","massVelocity","max","min","bound","_moveDir","myPos","vec4FollowPos","_moveStep","_massVec","_forceDir","isLoadComplete","start","node","worldPosition","clone","getComponent","model","modelBounds","halfExtents","mt","copy","sharedMaterial","sharedMaterials","pass","passes","setUniform","getHandle","y","position","x","z","initShader","data","initialize","effectAsset","technique","update","deltaTime","force","GetMainForce","add","GetDampingForce","multiplyScalar","SetMatData","subtract","stiffness","damping","vec32vec4","vec3","vec4","w"],"mappings":"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","sourcesContent":["import { _decorator, Component, EffectAsset, ImageAsset, Material, MeshRenderer, Node, Vec3, Vec4 } from 'cc';\r\nimport { AssetMgr } from './AssetMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Mass')\r\nexport class Mass extends Component {\r\n    public assetMgr: AssetMgr;\r\n    private mat: Material;\r\n    private followPos: Vec3;//从动点位置\r\n    private massVelocity: Vec3 //从动点速度\r\n    @property(Number)\r\n    public stiffness = 60.0;//劲度系数\r\n    @property(Number)\r\n    public damping = 2.0;//阻尼系数\r\n\r\n    private max: number;\r\n    private min: number;//模型在模型空间最高, 最低点的y值\r\n    private bound: Vec3;\r\n    // private _delayMoveTime = 0.5;\r\n    // private _curTime = 0;\r\n    private _moveDir: Vec3;\r\n    private myPos: Vec4;\r\n    private vec4FollowPos: Vec4;\r\n    private _moveStep = 0.01;\r\n    private _massVec: Vec3 = new Vec3();\r\n    private _forceDir: Vec3 = new Vec3();\r\n    private isLoadComplete:boolean;\r\n    start() {\r\n       \r\n        this.massVelocity = new Vec3(0.0, 0.0, 0.0);\r\n\r\n        this.followPos = this.node.worldPosition.clone();//虚拟抽象一个从动点\r\n\r\n        // this.assetMgr.getRes(\"MassObj\", EffectAsset, \"shader\").then((data) => { this.initShader(data); })\r\n        var bound = this.getComponent(MeshRenderer).model.modelBounds.halfExtents;\r\n        this.bound = bound;\r\n        //使用加载好的 effect 初始化材质\r\n       \r\n        var mt = new Material();\r\n        mt.copy(this.getComponent(MeshRenderer).sharedMaterial)\r\n        // mt.initialize({ effectAsset: data, technique: 0 });\r\n        this.getComponent(MeshRenderer).sharedMaterials = [mt];\r\n        this.mat = mt;\r\n     \r\n        var pass = this.mat.passes[0];\r\n        pass.setUniform(pass.getHandle(\"_MeshH\"), bound.y * 2);//模型总高度\r\n\r\n        this.myPos = new Vec4(this.node.position.x, this.node.position.y, this.node.position.z, 1.0);\r\n        this.isLoadComplete = true;\r\n    }\r\n    initShader(data: EffectAsset) {\r\n        var bound = this.getComponent(MeshRenderer).model.modelBounds.halfExtents;\r\n        this.bound = bound;\r\n        //使用加载好的 effect 初始化材质\r\n       \r\n        var mt = new Material();\r\n        mt.copy(this.getComponent(MeshRenderer).sharedMaterial)\r\n        mt.initialize({ effectAsset: data, technique: 0 });\r\n        this.getComponent(MeshRenderer).sharedMaterials = [mt];\r\n        this.mat = mt;\r\n     \r\n        var pass = this.mat.passes[0];\r\n        pass.setUniform(pass.getHandle(\"_MeshH\"), bound.y * 2);//模型总高度\r\n\r\n        this.myPos = new Vec4(this.node.position.x, this.node.position.y, this.node.position.z, 1.0);\r\n        this.isLoadComplete = true;\r\n\r\n       \r\n    }\r\n    update(deltaTime: number) {\r\n        if(!this.isLoadComplete){\r\n            return;\r\n        }\r\n     \r\n        //进行一些受力, 加速度, 速度, 路程, 运动 的数值计算\r\n        var force = this.GetMainForce();//弹力\r\n\r\n        force.add(this.GetDampingForce());//阻力\r\n        this.massVelocity.add(force.multiplyScalar(deltaTime));//将固定质量为1, 则force数值等于加速度数值\r\n\r\n        Vec3.multiplyScalar(this._massVec, this.massVelocity, deltaTime)\r\n        this.followPos.add(this._massVec);//从动点的移动\r\n        //为shader传入数据\r\n        this.SetMatData();\r\n    }\r\n    private GetMainForce(): Vec3 {\r\n        //胡克定律\r\n        Vec3.subtract(this._forceDir, this.node.worldPosition, this.followPos)\r\n        return this._forceDir.multiplyScalar(this.stiffness);\r\n    }\r\n    private GetDampingForce(): Vec3 {\r\n        Vec3.multiplyScalar(this._massVec, this.massVelocity, -this.damping)\r\n        return this._massVec;//弹簧阻尼\r\n    }\r\n    private SetMatData(): void {\r\n        var pass = this.mat.passes[0];\r\n\r\n        this.myPos = this.vec32vec4(this.node.worldPosition, this.myPos);\r\n        this.vec4FollowPos = this.vec32vec4(this.followPos, this.vec4FollowPos);\r\n        pass.setUniform(pass.getHandle(\"_MainPos\"), this.myPos);//主动点\r\n        pass.setUniform(pass.getHandle(\"_FollowPos\"), this.vec4FollowPos);//从动点\r\n\r\n        pass.setUniform(pass.getHandle(\"_W_Bottom\"), this.node.worldPosition.y - this.bound.y);//模型最低点y值\r\n    }\r\n    private vec32vec4(vec3: Vec3, vec4: Vec4) {\r\n        if (!vec4) {\r\n            vec4 = new Vec4()\r\n        }\r\n        vec4.x = vec3.x;\r\n        vec4.y = vec3.y;\r\n        vec4.z = vec3.z;\r\n        vec4.w = 1.0;\r\n        return vec4;\r\n    }\r\n    // set enabled(val:boolean){\r\n    //     if(val){\r\n    //         this.\r\n    //     }\r\n    // }\r\n}\r\n\r\n\r\n"]}