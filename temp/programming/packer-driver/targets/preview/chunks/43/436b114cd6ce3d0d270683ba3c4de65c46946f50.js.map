{"version":3,"sources":["file:///D:/Project/cocos/test/assets/script/GameController.ts"],"names":["_decorator","BoxCollider","Camera","Collider","Color","Component","DistanceJoint2D","ERigidBodyType","find","geometry","Graphics","HingeConstraint","Input","Layers","Node","PhysicsSystem","PlaneCollider","PointToPointConstraint","Prefab","RigidBody","RigidBody2D","tween","UITransform","Vec2","Vec3","AssetMgr","ccclass","property","GameController","displayName","dj2d","beRotateObj","scanAngle","_moveDir","distance","forceVec","_curTick","disForceTime","MaxAngle","DOWN_DIR","DROP_DISTANCE","HOLDER_BASE_POS","MAIN_CAMERA_POS","FORCE_CONTAINER_TIME","HOLDER_DIS_POS_Y","isMove","myPosBegin","myTargetPoint","dropRay","floorSpeed","dropVec","_floorNodes","_isCanCreateNext","_failFloor","_failForcePos","_floorContainerGav","_forceContainerTime","_floorContainerForce","_gavVec","_applyLastFloorForce","_connectFloors","_maxContainerRo","_targetContainerRo","_floorOffset","_dropBox","_preOffSet","start","assetMgr","preLoadBundles","then","createNewBox","bind","staticBody","distance2D","getComponent","myGraph","lineWidth","lineCap","LineCap","ROUND","strokeColor","BLUE","Ray","holder","setPosition","worldCamera","node","floorCollider","floorTemp","material","restitution","sharedMaterial","mainUI","on","EventType","TOUCH_START","onClickMainUI","update","deltaTime","cord","applyForce","cordStatic","containerRig","floorContainer","ro","Math","abs","eulerAngles","z","vecRo","getLinearVelocity","x","linearDamping","onCheckHitFunc","mask","maxDistance","queryTrigger","instance","raycast","raycastResults","forEach","rayRes","collider","uuid","hitArea","hitPoint","createFloor","pos","speed","getRes","data","initFloor","floor","obj","instantiate","push","setWorldPosition","setParent","rig","setLinearVelocity","y","boxW","scale","boxH","boxWHalf","sqrt","scheduleOnce","once","onCollision","frozenFloor","rightBody","type","STATIC","linearFactor","ZERO","angularFactor","connectFloor","preFoor","ppc","addComponent","useGravity","connectedBody","pivotA","worldPosition","removeFloor","removeInstant","index","indexOf","splice","event","lenFloor","length","lastFloor","boxCollider","preFloor","forceDir","dis","console","log","ONE","forcePos","focuseLastFloorPos","checkIsPerfactPos","position","lastPos","rockReduce","rockHandler","rotation","matchX","targetX","wolrdPos","getWorldPosition","to","hitPos","createFloorBox","box","mass","crane","layer","Enum","UI_3D","floorBornPos","hc","pivotB","dropFloor","destroy","cordCamera","worldToScreen","screenPointToRay","offset","strResult","rockAdd","floorRockRate","floorRockForce","reduceRate","floorRockDamping"],"mappings":"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","sourcesContent":["import { _decorator, BoxCollider, BoxCollider2D, Camera, Canvas, cclegacy, Collider, Color, Component, director, DistanceJoint2D, EColliderType, ERigidBody2DType, ERigidBodyType, find, geometry, Graphics, HingeConstraint, HingeJoint2D, ICollisionEvent, Input, instantiate, Layers, Node, PhysicsSystem, PlaneCollider, PointToPointConstraint, Prefab, Quat, resources, RigidBody, RigidBody2D, Size, Sprite, tween, Tween, UITransform, Vec2, Vec3 } from 'cc';\r\nimport { AssetMgr } from './AssetMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(AssetMgr)\r\n    public assetMgr: AssetMgr;\r\n    @property(RigidBody2D)\r\n    public baseBox: RigidBody2D;\r\n    @property(RigidBody2D)\r\n    public staticBody: RigidBody2D;\r\n    @property(RigidBody)\r\n    public cordStatic: RigidBody;\r\n    @property(RigidBody)\r\n    public cord: RigidBody;\r\n    @property(Graphics)\r\n    public myGraph: Graphics;\r\n    @property(Graphics)\r\n    public uiGraph: Graphics;\r\n    @property(Node)\r\n    public mainUI: Node;\r\n    @property(Camera)\r\n    public worldCamera: Camera;\r\n    @property(Camera)\r\n    public uiCamera: Camera;\r\n    @property(Camera)\r\n    public cordCamera: Camera;\r\n    @property(UITransform)\r\n    public uiTransform: UITransform;\r\n    @property(Node)\r\n    public holder: Node;\r\n    @property(Node)\r\n    public hitArea: Node;\r\n    @property(Node)\r\n    public floorTemp: Node;\r\n    @property(Node)\r\n    public testNode: Node;\r\n    @property(Node)\r\n    public firstFloor: Node;\r\n    @property(Node)\r\n    public floorStatic: Node;\r\n    @property(Node)\r\n    public floorContainer: Node;\r\n    @property(Node)\r\n    public floorBornPos: Node;\r\n    @property({ displayName: \"命中衰减振幅系数\" })\r\n    /**命中衰减振幅系数 */\r\n    public reduceRate = 0.1;\r\n    @property({ displayName: \"楼层高度振幅系数\" })\r\n    /**楼层高度振幅系数 */\r\n    public floorRockRate = 0.2;\r\n    @property({ displayName: \"振幅衰减阻尼系数\" })\r\n    /**振幅衰减阻尼系数 */\r\n    public floorRockDamping = 0.5;\r\n    /**振幅系数 */\r\n    @property({ displayName: \"振幅系数\" })\r\n    public floorRockForce = 1;\r\n    protected dj2d: DistanceJoint2D;\r\n    protected beRotateObj: RigidBody2D\r\n    private scanAngle: Vec3;\r\n    private _moveDir: number = 50;\r\n    private readonly distance = 300;\r\n    // private localCenter: Vec2;\r\n    private forceVec: Vec2;\r\n    private _curTick = 0;\r\n    private readonly disForceTime = 2;\r\n    private readonly MaxAngle = 30;\r\n    private readonly DOWN_DIR = new Vec3(0, -1, 0)\r\n    /**掉落判断偏移值 */\r\n    private DROP_DISTANCE: number;\r\n    private readonly HOLDER_BASE_POS = new Vec3(0, 700, 0)\r\n    private readonly MAIN_CAMERA_POS = new Vec3(0, 3, 16)\r\n    private readonly FORCE_CONTAINER_TIME = 1;\r\n    // public MAX_DISTANCE: number;\r\n    private HOLDER_DIS_POS_Y: number;\r\n    private isMove = false;\r\n    private myPosBegin: Vec3;\r\n    private myTargetPoint: Vec3;\r\n    private dropRay: geometry.Ray\r\n    private floorSpeed: Vec3;\r\n    private dropVec: Vec3;\r\n    private _floorNodes: Node[];\r\n    private _isCanCreateNext: boolean = true;\r\n    private _failFloor: RigidBody;\r\n    private _failForcePos: Vec3;\r\n    private _floorContainerGav = new Vec3(0, 20, 0)\r\n    private _forceContainerTime = 0;\r\n    private _floorContainerForce = new Vec3(1, 0, 0)\r\n    private _gavVec = new Vec3(0, -10, 0)\r\n    private _applyLastFloorForce = new Vec3(0.2, 0, 0)\r\n    private _connectFloors: RigidBody[] = [];\r\n    private _maxContainerRo: number = 0;\r\n    private _targetContainerRo = 0;\r\n    private _floorOffset = 0;\r\n    private _dropBox: RigidBody;\r\n    start() {\r\n        this.assetMgr.preLoadBundles().then(this.createNewBox.bind(this));\r\n        // PhysicsSystem.instance.restitution=\r\n        if (this.staticBody) {\r\n            var distance2D = this.staticBody.getComponent(DistanceJoint2D)\r\n            this.dj2d = distance2D;\r\n            this.forceVec = new Vec2(this._moveDir, 0);\r\n            this.myGraph.lineWidth = 10;\r\n            this.myGraph.lineCap = Graphics.LineCap.ROUND;\r\n            this.myGraph.strokeColor = Color.BLUE;\r\n            this.myPosBegin = new Vec3();\r\n            this.myTargetPoint = new Vec3();\r\n            this.dropRay = new geometry.Ray\r\n            this._floorNodes = [];\r\n            this.holder.setPosition(this.HOLDER_BASE_POS);\r\n            this.worldCamera.node.setPosition(this.MAIN_CAMERA_POS)\r\n            var floorCollider = this.floorTemp.getComponent(PlaneCollider)\r\n            floorCollider.material.restitution = 0;\r\n            floorCollider.sharedMaterial.restitution = 0;\r\n            this.floorSpeed = new Vec3();\r\n            this.dropVec = new Vec3();\r\n            // this.floorContainer.getComponent(RigidBody).applyLocalTorque(new Vec3(0, 0, 100))\r\n            // let tweenDuration: number = 2.0;\r\n            // let angle = 2;\r\n\r\n\r\n            // let embedTween = tween(this.floorTemp).to(tweenDuration, { eulerAngles: new Vec3(0, 0, angle * 2) }, { easing: \"cubicOut\" }).to(tweenDuration, { eulerAngles: new Vec3(0, 0, -angle * 2) }, { easing: \"cubicOut\" }).union();\r\n\r\n\r\n\r\n            // tween(this.floorTemp).to(tweenDuration / 2, { eulerAngles: new Vec3(0, 0, -angle) }, { easing: \"cubicOut\" }).call(() => {\r\n            //     embedTween.repeatForever().start();\r\n            // }).start();\r\n        }\r\n        this.mainUI.on(Input.EventType.TOUCH_START, this.onClickMainUI, this)\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n\r\n\r\n\r\n        this._curTick += deltaTime;\r\n\r\n        if (!this.isMove) {\r\n            this.cord.applyForce(new Vec3(5, 0, 0));\r\n            // this.baseBox.applyForceToCenter(this.forceVec, true);\r\n            if (this._curTick > this.disForceTime) {\r\n\r\n                this.isMove = true;\r\n            }\r\n        }\r\n\r\n        if (this.cordStatic) {\r\n\r\n        }\r\n        if (this._failFloor) {\r\n\r\n            this._failFloor.applyForce(this._failForcePos)\r\n        }\r\n        this._forceContainerTime += deltaTime\r\n        let containerRig = this.floorContainer.getComponent(RigidBody);\r\n        if (this._floorOffset > 0 && this._forceContainerTime < this.FORCE_CONTAINER_TIME) {\r\n\r\n            containerRig.applyForce(this._floorContainerForce)\r\n        }\r\n        containerRig.applyForce(this._floorContainerGav)\r\n\r\n        let ro = Math.abs(this.floorContainer.eulerAngles.z);\r\n        let vecRo: Vec3 = new Vec3;\r\n        containerRig.getLinearVelocity(vecRo)\r\n        if (Math.abs(vecRo.x) <= 0.01) {\r\n            this._maxContainerRo = ro;\r\n        }\r\n        if (this._maxContainerRo <= this._targetContainerRo && this._targetContainerRo > 0) {\r\n            containerRig.linearDamping = 0;\r\n        }\r\n\r\n\r\n    }\r\n    onCheckHitFunc() {\r\n        const mask = 0xffffffff;\r\n        const maxDistance = 10000000;\r\n        const queryTrigger = true;\r\n\r\n        if (PhysicsSystem.instance.raycast(this.dropRay)) {\r\n            const raycastResults = PhysicsSystem.instance.raycastResults;\r\n            raycastResults.forEach(rayRes => {\r\n                const collider = rayRes.collider;\r\n                if (raycastResults && collider.node.uuid == this.hitArea.uuid) {\r\n                    const hitPoint = rayRes.hitPoint\r\n                    this.createFloor(hitPoint, this.floorSpeed)\r\n\r\n                }\r\n            })\r\n        }\r\n    }\r\n    createFloor(pos: Vec3, speed: Vec3) {\r\n        this.assetMgr.getRes(\"BoxFloor\", Prefab, \"components\").then(data => {\r\n            this.initFloor(data, pos, speed)\r\n        })\r\n    }\r\n    initFloor(floor: Prefab, pos: Vec3, speed: Vec3) {\r\n        if (floor) {\r\n            var obj = this.assetMgr.instantiate(floor);\r\n            this._floorNodes.push(obj);\r\n            obj.setWorldPosition(pos);\r\n            obj.setParent(this.floorContainer, true)\r\n            // rightBody.node.setParent(this.floorContainer, true)\r\n            var rig = obj.getComponent(RigidBody)\r\n            rig.setLinearVelocity(new Vec3(speed.x / 7, speed.y, 0))\r\n            if (!this.DROP_DISTANCE) {\r\n                var boxW = obj.scale.x;\r\n                var boxH = obj.scale.y;\r\n                var boxWHalf = boxW / 2;\r\n                this.DROP_DISTANCE = Math.sqrt(boxH * boxH + boxWHalf * boxWHalf)\r\n            }\r\n            let collider = obj.getComponent(Collider);\r\n            // 监听触发事件\r\n            this.scheduleOnce(() => {\r\n                collider.once(\"onCollisionEnter\", this.onCollision, this);\r\n            }, 0.2)\r\n        }\r\n\r\n    }\r\n\r\n    /**固定楼层 */\r\n    private frozenFloor(rightBody: RigidBody): void {\r\n\r\n        rightBody.type = ERigidBodyType.STATIC;\r\n        rightBody.linearFactor = Vec3.ZERO\r\n        rightBody.angularFactor = Vec3.ZERO\r\n        // this.scheduleOnce(() => {\r\n\r\n\r\n        // }, 2)\r\n    }\r\n    private connectFloor(floor: Node, preFoor: Node): void {\r\n        var ppc = preFoor.addComponent(PointToPointConstraint)\r\n        var rig = floor.getComponent(RigidBody);\r\n        rig.useGravity = false;\r\n        ppc.connectedBody = rig\r\n        ppc.pivotA = new Vec3(floor.worldPosition.x - preFoor.worldPosition.x, 1, 0)\r\n        this._connectFloors.push(rig)\r\n    }\r\n    removeFloor(floor: Node) {\r\n        this.assetMgr.removeInstant(floor)\r\n        var index = this._floorNodes.indexOf(floor)\r\n        this._floorNodes.splice(index, 1)\r\n    }\r\n    onCollision(event: ICollisionEvent) {\r\n        var lenFloor = this._floorNodes.length\r\n        if (lenFloor > 0) {\r\n            var lastFloor = this._floorNodes[lenFloor - 1];\r\n\r\n            var rightBody = lastFloor.getComponent(RigidBody);\r\n            var boxCollider = rightBody.getComponent(BoxCollider)\r\n\r\n\r\n            if (lenFloor > 1) {\r\n                var preFloor = this._floorNodes[lenFloor - 2];\r\n                var forceDir = lastFloor.worldPosition.x - preFloor.worldPosition.x;\r\n\r\n                var dis = Vec3.distance(preFloor.worldPosition, lastFloor.worldPosition)//Math.abs(preFloor.worldPosition.x - lastFloor.worldPosition.x);\r\n\r\n                if (forceDir > 0) {\r\n\r\n                    this._applyLastFloorForce.x = -dis;\r\n                } else {\r\n\r\n                    this._applyLastFloorForce.x = dis;\r\n                }\r\n\r\n                console.log(\"距离：\" + dis + \",最大距离差：\" + this.DROP_DISTANCE)\r\n                if (dis >= this.DROP_DISTANCE) {\r\n                    rightBody.angularFactor = Vec3.ONE\r\n\r\n                    var forcePos = new Vec3(0, 0, 0);\r\n                    if (preFloor.worldPosition.x < lastFloor.worldPosition.x) {\r\n                        forcePos.x = 10;\r\n                        console.log(\"往右掉下来\")\r\n                    } else {\r\n                        forcePos.x = -10;\r\n                        console.log(\"往左掉下来\")\r\n                    }\r\n                    this._failForcePos = forcePos;\r\n                    this._failFloor = rightBody;\r\n                    this.scheduleOnce(() => {\r\n                        this.removeFloor(lastFloor)\r\n                        this.createNewBox();\r\n                        this._failFloor = null;\r\n                    }, 2)\r\n                } else {\r\n                    this.focuseLastFloorPos(lastFloor)\r\n\r\n                    this.frozenFloor(rightBody)\r\n\r\n                    if (this.checkIsPerfactPos(lastFloor.position.x, preFloor.position.x)) {//完美命中\r\n                        var lastPos = lastFloor.position;\r\n                        lastFloor.setPosition(preFloor.position.x, lastPos.y, lastPos.z)\r\n                        this.rockReduce();\r\n                        console.log(\"完美命中\")\r\n                    } else {\r\n                        if (lenFloor > 3) {\r\n                            this.rockHandler(forceDir);\r\n                        } else {\r\n                            this._floorOffset += forceDir;\r\n                        }\r\n                    }\r\n                    rightBody.node.rotation = preFloor.rotation\r\n                }\r\n            } else {\r\n                this.focuseLastFloorPos(lastFloor)\r\n                this.frozenFloor(rightBody)\r\n            }\r\n        }\r\n    }\r\n    checkIsPerfactPos(matchX: number, targetX: number) {\r\n        return Math.abs(matchX - targetX) < 0.05\r\n    }\r\n    /**相机跟踪最后一块楼层 */\r\n    focuseLastFloorPos(floor: Node) {\r\n        var wolrdPos = floor.getWorldPosition();\r\n        wolrdPos.x = this.MAIN_CAMERA_POS.x;\r\n        wolrdPos.z = this.MAIN_CAMERA_POS.z;\r\n        wolrdPos.y += 1.8;\r\n        // this.worldCamera.node.setWorldPosition(wolrdPos)\r\n        tween(this.worldCamera.node).to(0.2, { worldPosition: wolrdPos }).start();\r\n        var hitPos = this.hitArea.getWorldPosition();\r\n        hitPos.y = wolrdPos.y - 3\r\n        this.hitArea.setWorldPosition(hitPos)\r\n\r\n        this.createNewBox();\r\n\r\n    }\r\n    createNewBox() {\r\n        // this.assetMgr.getRes(\"BaseBox\", Prefab, \"components\").then(data => { this.createBox(data) })\r\n        this.assetMgr.getRes(\"BoxFloor\", Prefab, \"components\").then(data => { this.createFloorBox(data) })\r\n    }\r\n    createFloorBox(box: Prefab) {\r\n        if (box) {\r\n            var obj = this.assetMgr.instantiate(box);\r\n            if (obj) {\r\n\r\n                var rig = obj.getComponent(RigidBody);\r\n                rig.angularFactor = Vec3.ZERO;\r\n                rig.mass = 0;\r\n                this._dropBox = rig;\r\n                var crane = find(\"crane\")\r\n                if (crane) {\r\n                    obj.setParent(crane)\r\n                    obj.layer = Layers.Enum.UI_3D;\r\n                }\r\n\r\n                obj.setWorldPosition(this.floorBornPos.worldPosition)\r\n\r\n                var hc = this.cord.addComponent(HingeConstraint)\r\n                hc.pivotA = new Vec3(0, -0.5, 0);\r\n                hc.pivotB = new Vec3(0, 0.5, 0);\r\n\r\n                hc.connectedBody = rig\r\n\r\n                // this.isMove = false;\r\n                this._curTick = 0;\r\n                this._isCanCreateNext = true;\r\n                // boxRight2d.wakeUp();\r\n            }\r\n        }\r\n    }\r\n\r\n    onClickMainUI() {\r\n        console.log(\"点击了\")\r\n\r\n        if (this._isCanCreateNext) {\r\n            var dropFloor = this._dropBox.node\r\n            if (dropFloor) {\r\n\r\n                var hc = this.cord.getComponent(HingeConstraint)\r\n                hc.destroy();\r\n\r\n                this._dropBox.getLinearVelocity(this.floorSpeed)\r\n                this.assetMgr.removeInstant(dropFloor);\r\n                this.floorSpeed.x *= 3\r\n                this.floorSpeed.y = -5;\r\n\r\n                this.dropVec = this.cordCamera.worldToScreen(dropFloor.worldPosition)\r\n\r\n                this.worldCamera.screenPointToRay(this.dropVec.x, this.dropVec.y, this.dropRay)\r\n                this.onCheckHitFunc();\r\n            }\r\n        }\r\n    }\r\n    private _preOffSet = 0;\r\n    /**根据偏移值进行处理摇摆效果 */\r\n    rockHandler(offset: number) {\r\n        this._floorOffset += offset;\r\n        var strResult = \"\"\r\n        if (Math.abs(this._preOffSet) < Math.abs(offset) || this._targetContainerRo == 0) {\r\n            this.rockAdd(offset);\r\n            strResult = \"加角度\"\r\n        } else {\r\n            this.rockReduce();\r\n            strResult = \"减角度\"\r\n        }\r\n        this._preOffSet = offset;\r\n        console.log(strResult + \"，Maxrotation：\" + this._maxContainerRo + \",目标角度：\" + this._targetContainerRo + \"偏移值：\" + this._floorOffset);\r\n    }\r\n    rockAdd(offset: number) {\r\n        var rig = this.floorContainer.getComponent(RigidBody)\r\n        this._floorContainerForce.x = offset * (1 / (this._floorNodes.length * this.floorRockRate)) * this.floorRockForce\r\n        this._forceContainerTime = 0;\r\n        rig.linearDamping = 0;\r\n    }\r\n    rockReduce() {\r\n        var rig = this.floorContainer.getComponent(RigidBody)\r\n        let reduceRate = 1 - this.reduceRate\r\n        this._targetContainerRo = this._maxContainerRo * reduceRate\r\n        rig.linearDamping = this.floorRockDamping;\r\n    }\r\n}\r\n\r\n"]}