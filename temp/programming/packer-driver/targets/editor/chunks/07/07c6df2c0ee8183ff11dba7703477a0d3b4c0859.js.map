{"version":3,"sources":["file:///D:/Project/cocos/test/assets/script/AssetMgr.ts"],"names":["_decorator","assetManager","Component","instantiate","BUNDLE_NAMES","ccclass","property","AssetMgr","mapBundleAssets","Map","start","update","deltaTime","preLoadBundles","arrPromise","len","length","i","push","loadBundles","Promise","all","bundleName","resolve","reject","loadBundle","err","data","console","error","message","set","name","getRes","cls","bundle","get","getResByBundle","then","load","removeInstant","node","destroy"],"mappings":";;;;;;;;;;AAISA,MAAAA,U,OAAAA,U;AAAmBC,MAAAA,Y,OAAAA,Y;AAA4BC,MAAAA,S,OAAAA,S;AAAqBC,MAAAA,W,OAAAA,W;;;;;;;8BAHhEC,Y,GAAe,CAAC,YAAD,C;;;;OAItB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;0BAEjBO,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb,SAC8BL,SAD9B,CACwC;AAAA;AAAA;AAAA,eAC7BM,eAD6B,GACX,IAAIC,GAAJ,EADW;AAAA;;AAEpCC,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;AACD;;;AACOC,QAAAA,cAAc,GAAG;AACpB,cAAIC,UAAU,GAAG,EAAjB;AACA,cAAIC,GAAG,GAAGX,YAAY,CAACY,MAAvB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1BH,YAAAA,UAAU,CAACI,IAAX,CAAgB,KAAKC,WAAL,CAAiBf,YAAY,CAACa,CAAD,CAA7B,CAAhB;AACH;;AACD,iBAAOG,OAAO,CAACC,GAAR,CAAYP,UAAZ,CAAP;AACH;;AACMK,QAAAA,WAAW,CAACG,UAAD,EAAqF;AACnG,iBAAO,IAAIF,OAAJ,CAAY,CAACG,OAAD,EAAUC,MAAV,KAAqB;AACpCvB,YAAAA,YAAY,CAACwB,UAAb,CAAwBH,UAAxB,EAAoC,CAACI,GAAD,EAAMC,IAAN,KAAe;AAC/C,kBAAID,GAAJ,EAAS;AACLE,gBAAAA,OAAO,CAACC,KAAR,CAAc,gBAAgBH,GAAG,CAACI,OAAlC;AACAN,gBAAAA,MAAM,CAACE,GAAD,CAAN;AACH,eAHD,MAGO;AACH,qBAAKlB,eAAL,CAAqBuB,GAArB,CAAyBJ,IAAI,CAACK,IAA9B,EAAoCL,IAApC;AACAJ,gBAAAA,OAAO,CAACI,IAAD,CAAP;AACH;AACJ,aARD;AASH,WAVM,CAAP;AAWH;;AACMM,QAAAA,MAAM,CAAkBD,IAAlB,EAAgCE,GAAhC,EAAkDZ,UAAlD,EAAyG;AAClH,cAAI,CAACA,UAAL,EAAiB;AACbA,YAAAA,UAAU,GAAGlB,YAAY,CAAC,CAAD,CAAzB;AACH;;AACD,cAAIkB,UAAJ,EAAgB;AACZ,gBAAIa,MAAM,GAAG,KAAK3B,eAAL,CAAqB4B,GAArB,CAAyBd,UAAzB,CAAb;;AACA,gBAAIa,MAAJ,EAAY;AACR,qBAAO,KAAKE,cAAL,CAAoBL,IAApB,EAA0BE,GAA1B,EAA+BC,MAA/B,CAAP;AACH,aAFD,MAEO;AACH,mBAAKhB,WAAL,CAAiBG,UAAjB,EAA6BgB,IAA7B,CAAkCX,IAAI,IAAI;AACtC,uBAAO,KAAKU,cAAL,CAAoBL,IAApB,EAA0BE,GAA1B,EAA+BP,IAA/B,CAAP;AACH,eAFD;AAGH;AACJ;AACJ;;AACMU,QAAAA,cAAc,CAAkBL,IAAlB,EAAgCE,GAAhC,EAAkDC,MAAlD,EAA2F;AAC5G,cAAIA,MAAJ,EAAY;AACR,mBAAO,IAAIf,OAAJ,CAAe,CAACG,OAAD,EAAUC,MAAV,KAAqB;AACvCW,cAAAA,MAAM,CAACI,IAAP,CAAYP,IAAZ,EAAkBE,GAAlB,EAAuB,IAAvB,EAA6B,CAACR,GAAD,EAAMC,IAAN,KAAe;AACxC,oBAAID,GAAJ,EAAS;AACLE,kBAAAA,OAAO,CAACC,KAAR,CAAcH,GAAG,CAACI,OAAlB;AACAN,kBAAAA,MAAM,CAACE,GAAD,CAAN;AACH,iBAHD,MAGO;AACHH,kBAAAA,OAAO,CAACI,IAAD,CAAP;AACH;AACJ,eAPD;AAQH,aATM,CAAP;AAUH;AAEJ;;AACMxB,QAAAA,WAAW,CAACwB,IAAD,EAAe;AAC7B,iBAAOxB,WAAW,CAACwB,IAAD,CAAlB;AACH;;AACMa,QAAAA,aAAa,CAACC,IAAD,EAAa;AAC7B,cAAIA,IAAJ,EAAU;AACN,mBAAOA,IAAI,CAACC,OAAL,EAAP;AACH;AACJ;;AApEmC,O","sourcesContent":["\r\nexport const BUNDLE_NAMES = [\"components\"] as const\r\ntype BUNDLE_NAME<S extends string> = S\r\n\r\nimport { _decorator, Asset, assetManager, AssetManager, Component, director, instantiate, Node, Prefab } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('AssetMgr')\r\nexport class AssetMgr extends Component {\r\n    public mapBundleAssets = new Map<string, AssetManager.Bundle>();\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n    /**预加载资源 */\r\n    public preLoadBundles() {\r\n        var arrPromise = []\r\n        var len = BUNDLE_NAMES.length;\r\n        for (let i = 0; i < len; i++) {\r\n            arrPromise.push(this.loadBundles(BUNDLE_NAMES[i]));\r\n        }\r\n        return Promise.all(arrPromise)\r\n    }\r\n    public loadBundles(bundleName: BUNDLE_NAME<typeof BUNDLE_NAMES[number]>): Promise<AssetManager.Bundle> {\r\n        return new Promise((resolve, reject) => {\r\n            assetManager.loadBundle(bundleName, (err, data) => {\r\n                if (err) {\r\n                    console.error(\"bundle加载失败：\" + err.message);\r\n                    reject(err);\r\n                } else {\r\n                    this.mapBundleAssets.set(data.name, data)\r\n                    resolve(data);\r\n                }\r\n            });\r\n        })\r\n    }\r\n    public getRes<T extends Asset>(name: string, cls: new () => T, bundleName?: BUNDLE_NAME<typeof BUNDLE_NAMES[number]>) {\r\n        if (!bundleName) {\r\n            bundleName = BUNDLE_NAMES[0]\r\n        }\r\n        if (bundleName) {\r\n            let bundle = this.mapBundleAssets.get(bundleName)\r\n            if (bundle) {\r\n                return this.getResByBundle(name, cls, bundle)\r\n            } else {\r\n                this.loadBundles(bundleName).then(data => {\r\n                    return this.getResByBundle(name, cls, data)\r\n                })\r\n            }\r\n        }\r\n    }\r\n    public getResByBundle<T extends Asset>(name: string, cls: new () => T, bundle: AssetManager.Bundle): Promise<T> {\r\n        if (bundle) {\r\n            return new Promise<T>((resolve, reject) => {\r\n                bundle.load(name, cls, null, (err, data) => {\r\n                    if (err) {\r\n                        console.error(err.message);\r\n                        reject(err);\r\n                    } else {\r\n                        resolve(data);\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    public instantiate(data: Prefab) {\r\n        return instantiate(data);\r\n    }\r\n    public removeInstant(node: Node) {\r\n        if (node) {\r\n            return node.destroy()\r\n        }\r\n    }\r\n\r\n}\r\n"]}