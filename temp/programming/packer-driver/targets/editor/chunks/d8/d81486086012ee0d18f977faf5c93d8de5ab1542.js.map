{"version":3,"sources":["file:///D:/Project/cocos/Tower/assets/script/GameController.ts"],"names":["_decorator","Camera","Collider","Component","ERigidBodyType","Input","MeshRenderer","Node","PlaneCollider","PointToPointConstraint","Prefab","profiler","RigidBody","tween","Vec2","Vec3","AssetMgr","MainUI","ccclass","property","GameController","displayName","maxRockRotation","dropDistance","floorContainerRockFrequency","floorRockTick","sky1Height","sky2Height","MAIN_CAMERA_POS","TOUCH_AROUND_TIME","craneGrows","floorSpeed","_floorNodes","_isCanCreateNext","_connectFloors","_floorOffNum","_floorOffset","_dropBox","_isUseJerryState","_dropBoxPos","_holderEurAngle","_holderPos","_holderLineScale","_holderLineOldScale","roTime","touchTime","beginTouchPos","mouseMovePos","cameraMoveVec","isWatchState","floorFirstName","floorName","watchPos","lerpTime","floorHeight","len","length","floorNode","getLastFloor","getMeshSize","y","start","assetMgr","preLoadBundles","then","createNewBox","bind","hideStats","worldCamera","node","setPosition","floorCollider","floorTemp","getComponent","material","restitution","sharedMaterial","mainUI","on","EventType","TOUCH_END","onClickMainUI","TOUCH_START","onClickStart","TOUCH_MOVE","onTouchMove","holderRock","getPosition","holderLine","getWorldScale","clone","update","deltaTime","pos","getWorldPosition","x","z","floorContainer","angle","Math","sin","rockMaxAngle","eulerAngles","craneMoveMaxX","craneMoveMaxY","cos","setWorldScale","holderCarry","setWorldPosition","lineEndPoint","parent","holderTemp","subtract","worldPosition","multiplyScalar","initFloorData","obj","speed","preFloor","push","setParent","rig","angularFactor","UNIT_Z","isTrigger","useGravity","setLinearVelocity","collider","once","onEnterCollision","event","lastFloor","ZERO","onCollision","getFloorName","frozenFloor","rightBody","type","STATIC","linearFactor","connectFloor","floor","preFoor","ppc","addComponent","connectedBody","pivotA","removeFloor","removeInstant","index","indexOf","splice","lenFloor","forceDir","lastFloorMeshSize","boxH","boxWHalf","dis","distance","position","sqrt","dropScan","console","log","offset","clearState","offAngle","targetAngle","to","scheduleOnce","canCreateFunc","rotation","checkIsPerfactPos","lastPos","rockHandler","focuseLastFloorPos","matchX","targetX","abs","scaleVec","ONE","mesh","modelHalf","model","modelBounds","halfExtents","multiply","createCraneGrow","getRes","data","instantiate","craneGrowTemp","modelSize","scale","setScale","targetPos","resetCameraPos","during","wolrdPos","call","cranePos","craneHolder","modelCenter","skyBox","skyBox2","numFloor","setFloorNum","rate","alpha","changeSkyBoxAlpha","rate2","createFloorBox","box","dropFloor","e","getLocation","centerVec","R","value","dir","absValue","zValue","lookAt","limit","atan","asin","num","min","max","addMode","mr","mat","pass","passes","setUniform","getHandle"],"mappings":"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","sourcesContent":["import { _decorator, BoxCollider, BoxCollider2D, Camera, Canvas, cclegacy, Collider, Color, Component, debug, DebugMode, director, DistanceJoint2D, EColliderType, ERigidBody2DType, ERigidBodyType, EventTouch, find, geometry, Graphics, HingeConstraint, HingeJoint2D, ICollisionEvent, Input, instantiate, Layers, lerp, MeshRenderer, Node, PhysicsSystem, PlaneCollider, PointToPointConstraint, Prefab, profiler, Quat, resources, RigidBody, RigidBody2D, SceneGlobals, Scheduler, Size, Sprite, tween, Tween, UITransform, Vec2, Vec3 } from 'cc';\r\nimport { AssetMgr } from './AssetMgr';\r\nimport { Mass } from './Mass';\r\nimport { MainUI } from './MainUI';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(AssetMgr)\r\n    public assetMgr: AssetMgr;\r\n    @property(Node)\r\n    public skyBox: Node;\r\n    @property(Node)\r\n    public skyBox2: Node;\r\n    @property(MainUI)\r\n    public mainUI: MainUI;\r\n    @property(Camera)\r\n    public worldCamera: Camera;\r\n    @property(Node)\r\n    public craneGrowTemp: Node;\r\n    @property(Node)\r\n    public holderRock: Node;\r\n    @property(Node)\r\n    public holderLine: Node;\r\n    @property(Node)\r\n    public holderCarry: Node;\r\n    @property(Node)\r\n    public lineEndPoint: Node;\r\n    @property(Node)\r\n    public holderTemp: Node;\r\n    @property(Node)\r\n    public craneHolder: Node;\r\n    @property(Node)\r\n    public floorTemp: Node;\r\n    @property(Node)\r\n    public floorContainer: Node;\r\n    @property(Node)\r\n    public floorBornPos: Node;\r\n    @property(Node)\r\n    public hold: Node;\r\n    @property({ displayName: \"命中准确系数\" })\r\n    /**命中准确系数 */\r\n    public dropScan = 1;\r\n    @property({ displayName: \"锤摆最大角度\" })\r\n    /**锤摆最大角度 */\r\n    public rockMaxAngle = 15.0;\r\n    @property({ displayName: \"吊绳水平摇摆最大距离\" })\r\n    /**吊绳水平摇摆最大距离 */\r\n    public craneMoveMaxX = 0.0001;\r\n    @property({ displayName: \"吊绳缩放比\" })\r\n    /**吊绳垂直摇摆最大距离 */\r\n    public craneMoveMaxY = 0.3;\r\n    /**高楼最大锤摆角 */\r\n    public maxRockRotation = 0.0;\r\n    /**掉落判断偏移值 */\r\n    private dropDistance: number;\r\n    private floorContainerRockFrequency: number = 1;\r\n    private floorRockTick: number = 0;\r\n    private sky1Height: number;\r\n    private sky2Height: number;\r\n\r\n\r\n    private readonly MAIN_CAMERA_POS = new Vec3(0, 3, 14)\r\n    private readonly TOUCH_AROUND_TIME = 1.0;\r\n    private craneGrows: Node[];\r\n    private floorSpeed: Vec3;\r\n    private _floorNodes: Node[];\r\n    private _isCanCreateNext: boolean = true;\r\n\r\n    private _connectFloors: RigidBody[] = [];\r\n\r\n    private _floorOffNum = 0;\r\n    private _floorOffset = 0;\r\n    private _dropBox: RigidBody;\r\n    private _isUseJerryState: boolean = false;\r\n    private _dropBoxPos: Vec3;\r\n    private _holderEurAngle: Vec3;\r\n    private _holderPos: Vec3;\r\n    private _holderLineScale: Vec3;\r\n    private _holderLineOldScale: Vec3;\r\n\r\n\r\n    private roTime = 0;\r\n\r\n\r\n    private touchTime: number = -1;\r\n    private beginTouchPos: Vec2;\r\n    private mouseMovePos: Vec2;\r\n    private cameraMoveVec: Vec2;\r\n    private isWatchState: boolean;\r\n    private floorFirstName: string = \"floor_1_0\"\r\n    private floorName: string = \"floor_1_1\";\r\n    private watchPos: Vec3;\r\n    private lerpTime = 0;\r\n    /**获取最后一层楼高度 */\r\n    public get floorHeight(): number {\r\n        var len = this._floorNodes.length\r\n        var floorNode: Node;\r\n        if (len > 1) {\r\n            floorNode = this._floorNodes[len - 2];\r\n        } else if (len > 0) {\r\n            floorNode = this.getLastFloor();\r\n        } else {\r\n            return 0;\r\n        }\r\n        return this.getMeshSize(floorNode).y * 2\r\n    }\r\n    start() {\r\n        this.assetMgr.preLoadBundles().then(this.createNewBox.bind(this));\r\n\r\n        profiler.hideStats();\r\n        this._floorNodes = [];\r\n\r\n        this.worldCamera.node.setPosition(this.MAIN_CAMERA_POS)\r\n        var floorCollider = this.floorTemp.getComponent(PlaneCollider)\r\n        floorCollider.material.restitution = 0;\r\n        floorCollider.sharedMaterial.restitution = 0;\r\n        this.floorSpeed = new Vec3();\r\n        this._holderEurAngle = new Vec3();\r\n\r\n        this.craneGrows = [];\r\n        this.mainUI.node.on(Input.EventType.TOUCH_END, this.onClickMainUI, this)\r\n        this.mainUI.node.on(Input.EventType.TOUCH_START, this.onClickStart, this)\r\n        this.mainUI.node.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this._holderPos = this.holderRock.getPosition();\r\n        this._holderLineOldScale = this.holderLine.getWorldScale().clone();\r\n        this._holderLineScale = this._holderLineOldScale.clone();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n        this.roTime += deltaTime;\r\n        this.floorRockTick += deltaTime;\r\n        if (this.touchTime >= 0) {\r\n            this.touchTime += deltaTime;\r\n        }\r\n        if (this.touchTime >= this.TOUCH_AROUND_TIME) {\r\n            this.isWatchState = true;\r\n            var pos = this.getLastFloor().getWorldPosition()\r\n            this.watchPos = new Vec3(pos.x, pos.y, pos.z)\r\n        }\r\n\r\n\r\n        this.floorContainer.angle = Math.sin(this.floorRockTick * this.floorContainerRockFrequency) * this.maxRockRotation;\r\n        this._holderEurAngle.x = Math.sin(this.roTime * 2) * this.rockMaxAngle;\r\n        this.holderRock.eulerAngles = this._holderEurAngle;\r\n        this._holderPos.z += this.craneMoveMaxX * Math.sin(this.roTime * 2)\r\n\r\n        this._holderLineScale.y = this._holderLineOldScale.y + this.craneMoveMaxY * this._holderLineOldScale.y * Math.cos(this.roTime * 2)//(1 + this.craneMoveMaxY * Math.sin(this.roTime * 2));\r\n        this.holderLine.setWorldScale(this._holderLineScale)\r\n        this.holderRock.setPosition(this._holderPos)\r\n        this.holderCarry.setWorldPosition(this.lineEndPoint.getWorldPosition())\r\n        if (this._isCanCreateNext && this._dropBox && this._dropBox.node && this._dropBox.node.parent == this.holderTemp) {\r\n\r\n            if (this._dropBoxPos) {\r\n\r\n                Vec3.subtract(this._dropBoxPos, this._dropBox.node.worldPosition, this._dropBoxPos)\r\n                // if (this._dropBoxPos.y < 0) {//防止上一帧dropBox已经掉落导致位置问题\r\n\r\n                Vec3.multiplyScalar(this.floorSpeed, this._dropBoxPos, 1 / deltaTime)\r\n                this.floorSpeed.x *= 3\r\n                this.floorSpeed.y = -10;\r\n\r\n                // }\r\n            }\r\n            this._dropBoxPos = this._dropBox.node.worldPosition.clone();\r\n\r\n        }\r\n    }\r\n\r\n    initFloorData(obj: Node, pos: Vec3, speed: Vec3) {\r\n        var preFloor = this.getLastFloor();\r\n        if (!preFloor) {\r\n            preFloor = obj;\r\n        }\r\n        this._floorNodes.push(obj);\r\n        obj.setParent(this.node, true)\r\n\r\n\r\n        var rig = obj.getComponent(RigidBody)\r\n        rig.angularFactor = Vec3.UNIT_Z;\r\n        rig.getComponent(Collider).isTrigger = false;\r\n        rig.useGravity = true;\r\n        rig.setLinearVelocity(new Vec3(speed.x / 7, speed.y, 0))\r\n\r\n        let collider = obj.getComponent(Collider);\r\n\r\n        // 监听触发事件\r\n        collider.once(\"onCollisionEnter\", this.onEnterCollision, this);\r\n\r\n    }\r\n    private onEnterCollision(event: ICollisionEvent) {\r\n        var lastFloor = this.getLastFloor();\r\n        lastFloor.setParent(this.floorContainer, true)\r\n        lastFloor.eulerAngles = Vec3.ZERO;\r\n        this.onCollision(event)\r\n        // tween(lastFloor).to(0.1, { eulerAngles: Vec3.ZERO }).call(this.onCollision.bind(this)).start();\r\n    }\r\n    private getFloorName(): string {\r\n        if (this._floorNodes.length < 1) {\r\n            return this.floorFirstName;\r\n        }\r\n        return this.floorName;\r\n    }\r\n    /**固定楼层 */\r\n    private frozenFloor(rightBody: RigidBody): void {\r\n\r\n        rightBody.type = ERigidBodyType.STATIC;\r\n        rightBody.linearFactor = Vec3.ZERO\r\n        rightBody.angularFactor = Vec3.ZERO\r\n\r\n        // rightBody.node.eulerAngles = Vec3.ZERO;\r\n    }\r\n    private connectFloor(floor: Node, preFoor: Node): void {\r\n        var ppc = preFoor.addComponent(PointToPointConstraint)\r\n        var rig = floor.getComponent(RigidBody);\r\n        rig.useGravity = false;\r\n        ppc.connectedBody = rig\r\n        ppc.pivotA = new Vec3(floor.worldPosition.x - preFoor.worldPosition.x, 1, 0)\r\n        this._connectFloors.push(rig)\r\n    }\r\n    removeFloor(floor: Node) {\r\n        this.assetMgr.removeInstant(floor)\r\n        var index = this._floorNodes.indexOf(floor)\r\n        this._floorNodes.splice(index, 1)\r\n    }\r\n    onCollision(event: ICollisionEvent) {\r\n        var lenFloor = this._floorNodes.length\r\n        if (lenFloor > 0) {\r\n            var lastFloor = this.getLastFloor();\r\n\r\n\r\n            var rightBody = lastFloor.getComponent(RigidBody);\r\n\r\n            if (lenFloor > 1) {\r\n                var preFloor = this._floorNodes[lenFloor - 2];\r\n                var forceDir = lastFloor.worldPosition.x - preFloor.worldPosition.x;\r\n                var lastFloorMeshSize = this.getMeshSize(lastFloor)\r\n                var boxH = lastFloorMeshSize.y + this.floorHeight * 0.5\r\n                var boxWHalf = lastFloorMeshSize.x;\r\n                var dis = Vec3.distance(preFloor.position, lastFloor.position)//Math.abs(preFloor.worldPosition.x - lastFloor.worldPosition.x);\r\n                this.dropDistance = Math.sqrt(boxH * boxH + boxWHalf * boxWHalf) * this.dropScan;\r\n                console.log(\"距离：\" + dis + \",最大距离差：\" + this.dropDistance)\r\n                var offset = dis - this.dropDistance\r\n                if (offset >= 0) {\r\n                    lastFloor.getComponent(Collider).isTrigger = true;\r\n                    rightBody.clearState();// = Vec3.ZERO\r\n                    rightBody.angularFactor = Vec3.ZERO\r\n                    lastFloor.setParent(this.node, true)\r\n                    var offAngle = (10.0 + (offset / this.dropDistance) * 90);\r\n                    // rightBody.linearFactor = Vec3.ONE\r\n                    // var forcePos = new Vec3(0, 0, 0);\r\n                    var targetAngle: number;\r\n                    if (preFloor.worldPosition.x < lastFloor.worldPosition.x) {\r\n                        targetAngle = -offAngle;\r\n                        rightBody.setLinearVelocity(new Vec3(1, -9, 5))\r\n                        // Vec3.multiplyScalar(rightBody.linearFactor, Vec3.UNIT_X, 50);\r\n                        // forcePos.x = 10;\r\n                        console.log(\"往右掉下来\")\r\n                    } else {\r\n                        // forcePos.x = -10;\r\n                        targetAngle = offAngle\r\n                        rightBody.setLinearVelocity(new Vec3(-1, -9, 5))\r\n                        // Vec3.multiplyScalar(rightBody.linearFactor, Vec3.UNIT_X, -50);\r\n                        console.log(\"往左掉下来\")\r\n                    }\r\n                    tween(lastFloor).to(0.5, { angle: targetAngle }).start();\r\n                    this.scheduleOnce(() => {\r\n                        this.removeFloor(lastFloor)\r\n                        this.createNewBox();\r\n                        this.canCreateFunc();\r\n                    }, 1)\r\n                } else {\r\n\r\n                    this.frozenFloor(rightBody)\r\n                    var pos = lastFloor.position;\r\n                    //防止碰撞检测延时所以固定了Y\r\n\r\n                    lastFloor.setPosition(pos.x, preFloor.position.y + this.floorHeight, pos.z)\r\n                    lastFloor.rotation = preFloor.rotation;\r\n\r\n                    if (this.checkIsPerfactPos(lastFloor.position.x, preFloor.position.x)) {//完美命中\r\n                        var lastPos = lastFloor.position;\r\n                        lastFloor.setPosition(preFloor.position.x, lastPos.y, lastPos.z)\r\n                        console.log(\"完美命中\")\r\n                        this.rockHandler(0);\r\n                    } else {\r\n                        console.log(\"命中\")\r\n                        this.rockHandler(forceDir);\r\n                    }\r\n\r\n                    this.focuseLastFloorPos(lastFloor)\r\n                }\r\n            } else {\r\n                this.focuseLastFloorPos(lastFloor)\r\n                this.frozenFloor(rightBody)\r\n            }\r\n        }\r\n    }\r\n\r\n    checkIsPerfactPos(matchX: number, targetX: number) {\r\n        return Math.abs(matchX - targetX) < 0.05\r\n    }\r\n    getMeshSize(node: Node, scaleVec: Vec3 = Vec3.ONE): Vec3 {\r\n        let mesh = node.getComponent(MeshRenderer)\r\n        if (mesh) {\r\n            var modelHalf = mesh.model.modelBounds.halfExtents.clone();\r\n            modelHalf.multiply(node.getWorldScale());//*= node.scale.y;\r\n            modelHalf.multiply(scaleVec);\r\n            return modelHalf;\r\n        }\r\n    }\r\n    createCraneGrow() {\r\n        this.assetMgr.getRes(\"CraneGrow\", Prefab, \"components\").then(data => {\r\n            var obj = this.assetMgr.instantiate(data);\r\n            obj.setParent(this.craneGrowTemp)\r\n            var modelSize = this.getMeshSize(obj);\r\n            var scale = this.floorHeight / (modelSize.z * 2);\r\n            obj.setScale(obj.scale.x, obj.scale.y, scale);\r\n            var pos = obj.getWorldPosition();\r\n            this.craneGrows.push(obj);\r\n            pos.y = obj.parent.worldPosition.y + (this.craneGrows.length - 1) * this.floorHeight;\r\n            obj.setWorldPosition(pos)\r\n            // obj.setWorldPosition(pos.x, pos.y + (this.craneGrows.length) * this.floorHeight , pos.z);\r\n            var targetPos = new Vec3(pos.x, pos.y + this.floorHeight, pos.z)\r\n            tween(obj).to(0.2, { worldPosition: targetPos }).start();\r\n        })\r\n    }\r\n    private canCreateFunc() {\r\n        this._isCanCreateNext = true;\r\n    }\r\n    resetCameraPos(floor: Node, during = 0.2) {\r\n        var wolrdPos = floor.getWorldPosition();\r\n        wolrdPos.x = this.MAIN_CAMERA_POS.x;\r\n        wolrdPos.z = this.MAIN_CAMERA_POS.z;\r\n        wolrdPos.y += 1.8;\r\n        return tween(this.worldCamera.node).to(during, { worldPosition: wolrdPos, eulerAngles: Vec3.ZERO })\r\n    }\r\n    /**相机跟踪最后一块楼层 */\r\n    focuseLastFloorPos(floor: Node) {\r\n        this.createCraneGrow();\r\n\r\n        var wolrdPos = floor.getWorldPosition();\r\n        wolrdPos.x = this.MAIN_CAMERA_POS.x;\r\n        wolrdPos.z = this.MAIN_CAMERA_POS.z;\r\n        wolrdPos.y += 1.8;\r\n\r\n        this.resetCameraPos(floor).call(this.canCreateFunc.bind(this)).start();\r\n        // this.worldCamera.node.lookAt(floor.getWorldPosition())\r\n        var cranePos = this.craneHolder.getWorldPosition();\r\n        cranePos.y += this.floorHeight;\r\n        tween(this.craneHolder).to(0.2, { worldPosition: cranePos }).start();\r\n        // this.craneHolder.setWorldPosition(cranePos)\r\n        // this.createNewBox();\r\n        if (!this.sky1Height) {\r\n            let modelCenter = this.getMeshSize(this.skyBox)\r\n            this.sky1Height = modelCenter.y\r\n        }\r\n        if (!this.sky2Height) {\r\n            let modelCenter = this.getMeshSize(this.skyBox2)\r\n            this.sky2Height = modelCenter.y\r\n        }\r\n        var numFloor = this._floorNodes.length;\r\n        this.mainUI.setFloorNum(numFloor);\r\n        //天空1处理\r\n        var rate = this.floorHeight / this.sky1Height;\r\n        var alpha = numFloor * rate;\r\n        this.changeSkyBoxAlpha(this.skyBox, 1 - alpha, false)\r\n\r\n        //天空2处理\r\n        if (alpha >= 1) {//已冲破第一层天空\r\n            var rate2 = this.floorHeight / (this.sky2Height - this.sky1Height);\r\n            alpha = (numFloor - (1 / rate)) * rate2\r\n            this.changeSkyBoxAlpha(this.skyBox2, 1 - alpha, false)\r\n        } else {//还在第一层\r\n            // this.changeSkyBoxAlpha(this.skyBox2, 0, true)\r\n        }\r\n        this.createNewBox();\r\n    }\r\n\r\n    createNewBox() {\r\n        // this.assetMgr.getRes(\"BaseBox\", Prefab, \"components\").then(data => { this.createBox(data) })\r\n        this._dropBoxPos = null;\r\n        this.assetMgr.getRes(this.getFloorName(), Prefab, \"components\").then(data => { this.createFloorBox(data) })\r\n    }\r\n    createFloorBox(box: Prefab) {\r\n        if (box) {\r\n            var obj = this.assetMgr.instantiate(box);\r\n            if (obj) {\r\n\r\n                var rig = obj.getComponent(RigidBody);\r\n                rig.angularFactor = Vec3.ZERO;\r\n                rig.getComponent(Collider).isTrigger = true;\r\n                rig.useGravity = false;\r\n                this._dropBox = rig;\r\n\r\n                obj.setParent(this.holderTemp)\r\n            }\r\n        }\r\n    }\r\n    getLastFloor(): Node {\r\n        var len = this._floorNodes.length\r\n        if (this._floorNodes.length > 0) {\r\n            return this._floorNodes[len - 1];\r\n        }\r\n        return null;\r\n    }\r\n    onClickMainUI() {\r\n        this.touchTime = -1;\r\n        if (this.isWatchState) {\r\n            this.isWatchState = false;\r\n            console.log(\"结束观看\")\r\n            this.resetCameraPos(this.getLastFloor(), 1.0).start();\r\n            return;\r\n        }\r\n        console.log(\"点击了\")\r\n        if (this._isCanCreateNext) {\r\n            var dropFloor = this._dropBox.node\r\n            if (dropFloor) {\r\n                this._isCanCreateNext = false;\r\n                this.initFloorData(dropFloor, dropFloor.worldPosition, this.floorSpeed)\r\n            }\r\n        }\r\n    }\r\n    onClickStart(e: EventTouch) {\r\n        this.touchTime = 0\r\n        this.beginTouchPos = e.getLocation();\r\n    }\r\n    onTouchMove(e: EventTouch) {\r\n        if (!this.isWatchState) {\r\n            return;\r\n        }\r\n        this.mouseMovePos = e.getLocation();\r\n        if (!this.cameraMoveVec) {\r\n            this.cameraMoveVec = new Vec2();\r\n        }\r\n        if (this._floorNodes.length > 0) {\r\n            Vec2.subtract(this.cameraMoveVec, this.beginTouchPos, this.mouseMovePos);\r\n            this.cameraMoveVec.multiplyScalar(0.05);\r\n            // if (this.cameraMoveVec.y < 0) {\r\n            //     this.cameraMoveVec.y = 0;\r\n            // }\r\n            var centerVec = this.watchPos.clone();\r\n            var R = this.MAIN_CAMERA_POS.z\r\n\r\n            var value = R * R - this.cameraMoveVec.x * this.cameraMoveVec.x - this.cameraMoveVec.y * this.cameraMoveVec.y;\r\n            var dir = value >= 0 ? 1 : -1;\r\n            var absValue = Math.abs(value)\r\n\r\n            var zValue = Math.sqrt(absValue) * dir\r\n\r\n            var targetPos = new Vec3(this.cameraMoveVec.x, this.cameraMoveVec.y + centerVec.y + 1.8, zValue)\r\n\r\n            this.worldCamera.node.setWorldPosition(targetPos);\r\n            centerVec.y += 1.8\r\n            this.worldCamera.node.lookAt(centerVec)\r\n        }\r\n    }\r\n    /**根据偏移值进行处理摇摆效果 */\r\n    rockHandler(offset: number) {\r\n        var lenFloor = this._floorNodes.length;\r\n        var rate = 1.5 - lenFloor * 0.003\r\n        if (rate < 0) {\r\n            rate = 0;\r\n        }\r\n        this._floorOffNum += Math.abs(offset) * rate;\r\n        this._floorOffset += offset;\r\n\r\n        // this.floorRockTick = this.floorContainerRockFrequency\r\n        this.floorContainerRockFrequency = this.limit(1 + lenFloor * 0.01, 1, 3)\r\n        // this.floorContainer.angle = Math.sin(this.floorRockTick * this.floorContainerRockFrequency) * this.maxRockRotation;\r\n        var pos = this.getLastFloor().getWorldPosition()\r\n        this.maxRockRotation = Math.atan(this._floorOffNum / pos.y);\r\n        var angle = this.floorContainer.angle / this.maxRockRotation\r\n        if (this.maxRockRotation && angle >= -1 && angle <= 1) {\r\n            this.floorRockTick = Math.asin(angle) / this.floorContainerRockFrequency;\r\n        }\r\n    }\r\n    limit(num: number, min: number, max: number) {\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n    changeSkyBoxAlpha(node: Node, alpha: number, addMode: boolean) {\r\n        if (!addMode && alpha < 0) {\r\n            alpha = 0;\r\n        } else if (addMode && alpha > 1) {\r\n            alpha = 1;\r\n        }\r\n        if (node) {\r\n            var mr = node.getComponent(MeshRenderer);\r\n            var mat = mr.material;\r\n            var pass = mat.passes[0];\r\n            pass.setUniform(pass.getHandle(\"transparencyFactor\"), alpha);\r\n\r\n        }\r\n    }\r\n}\r\n\r\n"]}