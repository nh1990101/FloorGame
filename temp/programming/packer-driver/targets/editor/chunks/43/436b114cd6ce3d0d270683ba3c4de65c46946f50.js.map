{"version":3,"sources":["file:///D:/Project/cocos/test/assets/script/GameController.ts"],"names":["_decorator","Camera","Collider","Component","DistanceJoint2D","ERigidBodyType","find","geometry","Input","Layers","MeshRenderer","Node","PhysicsSystem","PlaneCollider","PointToPointConstraint","Prefab","RigidBody","RigidBody2D","tween","UITransform","Vec2","Vec3","AssetMgr","Mass","ccclass","property","GameController","displayName","maxRockRotation","dj2d","beRotateObj","scanAngle","_moveDir","distance","forceVec","_curTick","disForceTime","DOWN_DIR","DROP_DISTANCE","HOLDER_BASE_POS","MAIN_CAMERA_POS","FORCE_CONTAINER_TIME","dropRay","floorSpeed","dropVec","_floorNodes","_isCanCreateNext","_applyLastFloorForce","_connectFloors","_floorOffset","_dropBox","_isUseJerryState","_dropBoxPos","roTime","start","assetMgr","preLoadBundles","then","createNewBox","bind","staticBody","distance2D","getComponent","Ray","holder","setPosition","worldCamera","node","floorCollider","floorTemp","material","restitution","sharedMaterial","mainUI","on","EventType","TOUCH_START","onClickMainUI","update","deltaTime","containerRig","floorContainer","angle","Math","sin","cord","rockMaxAngle","subtract","worldPosition","multiplyScalar","x","y","clone","onCheckHitFunc","mask","maxDistance","queryTrigger","instance","raycast","raycastResults","forEach","rayRes","collider","uuid","hitArea","hitPoint","createFloor","pos","speed","getRes","data","initFloor","floor","obj","instantiate","push","setWorldPosition","setParent","rig","setLinearVelocity","mesh","modelCenter","model","modelBounds","halfExtents","boxH","boxWHalf","sqrt","dropScan","once","onCollision","frozenFloor","rightBody","type","STATIC","linearFactor","ZERO","angularFactor","connectFloor","preFoor","ppc","addComponent","useGravity","connectedBody","pivotA","removeFloor","removeInstant","index","indexOf","splice","event","lenFloor","length","lastFloor","preFloor","forceDir","dis","console","log","offset","isTrigger","offAngle","forcePos","mt","friction","rollingFriction","spinningFriction","scheduleOnce","focuseLastFloorPos","position","center","z","rotation","checkIsPerfactPos","lastPos","rockHandler","enabled","matchX","targetX","abs","wolrdPos","getWorldPosition","to","hitPos","createFloorBox","box","crane","floorBornPos","layer","Enum","UI_3D","dropFloor","cordCamera","worldToScreen","screenPointToRay","atan"],"mappings":"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","sourcesContent":["import { _decorator, BoxCollider, BoxCollider2D, Camera, Canvas, cclegacy, Collider, Color, Component, director, DistanceJoint2D, EColliderType, ERigidBody2DType, ERigidBodyType, find, geometry, Graphics, HingeConstraint, HingeJoint2D, ICollisionEvent, Input, instantiate, Layers, lerp, MeshRenderer, Node, PhysicsSystem, PlaneCollider, PointToPointConstraint, Prefab, Quat, resources, RigidBody, RigidBody2D, Scheduler, Size, Sprite, tween, Tween, UITransform, Vec2, Vec3 } from 'cc';\r\nimport { AssetMgr } from './AssetMgr';\r\nimport { Mass } from './Mass';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(AssetMgr)\r\n    public assetMgr: AssetMgr;\r\n    @property(RigidBody2D)\r\n    public baseBox: RigidBody2D;\r\n    @property(RigidBody2D)\r\n    public staticBody: RigidBody2D;\r\n\r\n    @property(Node)\r\n    public cord: Node;\r\n\r\n    @property(Node)\r\n    public mainUI: Node;\r\n    @property(Camera)\r\n    public worldCamera: Camera;\r\n    @property(Camera)\r\n    public uiCamera: Camera;\r\n    @property(Camera)\r\n    public cordCamera: Camera;\r\n    @property(UITransform)\r\n    public uiTransform: UITransform;\r\n    @property(Node)\r\n    public holder: Node;\r\n    @property(Node)\r\n    public hitArea: Node;\r\n    @property(Node)\r\n    public floorTemp: Node;\r\n    @property(Node)\r\n    public testNode: Node;\r\n    @property(Node)\r\n    public firstFloor: Node;\r\n    @property(Node)\r\n    public floorStatic: Node;\r\n    @property(Node)\r\n    public floorContainer: Node;\r\n    @property(Node)\r\n    public floorBornPos: Node;\r\n\r\n    @property({ displayName: \"命中准确系数\" })\r\n    /**命中准确系数 */\r\n    public dropScan = 1.0;\r\n    @property({ displayName: \"锤摆最大角度\" })\r\n    /**命中准确系数 */\r\n    public rockMaxAngle = 15.0;\r\n\r\n    /**最大锤摆角 */\r\n    public maxRockRotation = 0.0;\r\n    protected dj2d: DistanceJoint2D;\r\n    protected beRotateObj: RigidBody2D\r\n    private scanAngle: Vec3;\r\n    private _moveDir: number = 50;\r\n    private readonly distance = 300;\r\n    // private localCenter: Vec2;\r\n    private forceVec: Vec2;\r\n    private _curTick = 0;\r\n    private readonly disForceTime = 2;\r\n\r\n    private readonly DOWN_DIR = new Vec3(0, -1, 0)\r\n    /**掉落判断偏移值 */\r\n    private DROP_DISTANCE: number;\r\n    private readonly HOLDER_BASE_POS = new Vec3(0, 700, 0)\r\n    private readonly MAIN_CAMERA_POS = new Vec3(0, 3, 10)\r\n    private readonly FORCE_CONTAINER_TIME = 1;\r\n\r\n    private dropRay: geometry.Ray\r\n    private floorSpeed: Vec3;\r\n    private dropVec: Vec3;\r\n    private _floorNodes: Node[];\r\n    private _isCanCreateNext: boolean = true;\r\n\r\n    private _applyLastFloorForce = new Vec3(0.2, 0, 0)\r\n    private _connectFloors: RigidBody[] = [];\r\n\r\n    private _floorOffset = 0;\r\n    private _dropBox: RigidBody;\r\n    private _isUseJerryState: boolean;\r\n    private _dropBoxPos: Vec3;\r\n    // private _dropBoxSpeed: Vec3;\r\n    private roTime = 0;\r\n    start() {\r\n        this.assetMgr.preLoadBundles().then(this.createNewBox.bind(this));\r\n        // PhysicsSystem.instance.restitution=\r\n        if (this.staticBody) {\r\n            var distance2D = this.staticBody.getComponent(DistanceJoint2D)\r\n            this.dj2d = distance2D;\r\n            this.forceVec = new Vec2(this._moveDir, 0);\r\n\r\n            this.dropRay = new geometry.Ray\r\n            this._floorNodes = [];\r\n            this.holder.setPosition(this.HOLDER_BASE_POS);\r\n            this.worldCamera.node.setPosition(this.MAIN_CAMERA_POS)\r\n            var floorCollider = this.floorTemp.getComponent(PlaneCollider)\r\n            floorCollider.material.restitution = 0;\r\n            floorCollider.sharedMaterial.restitution = 0;\r\n            this.floorSpeed = new Vec3();\r\n            this.dropVec = new Vec3();\r\n            // this._dropBoxPos = new Vec3();\r\n\r\n        }\r\n        this.mainUI.on(Input.EventType.TOUCH_START, this.onClickMainUI, this)\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n        this._curTick += deltaTime;\r\n        this.roTime += deltaTime;\r\n\r\n        let containerRig = this.floorContainer.getComponent(RigidBody);\r\n\r\n        containerRig.node.angle = Math.sin(this.roTime * 2) * this.maxRockRotation;\r\n        this.cord.angle = Math.sin(this.roTime * 2) * this.rockMaxAngle;\r\n        if (this._dropBox && this._dropBox.node) {\r\n\r\n            if (this._dropBoxPos) {\r\n\r\n                Vec3.subtract(this._dropBoxPos, this._dropBox.node.worldPosition, this._dropBoxPos)\r\n                Vec3.multiplyScalar(this.floorSpeed, this._dropBoxPos, 1 / deltaTime)\r\n                this.floorSpeed.x *= 3\r\n                this.floorSpeed.y -= 5;\r\n            }\r\n            this._dropBoxPos = this._dropBox.node.worldPosition.clone();\r\n\r\n        }\r\n    }\r\n    onCheckHitFunc() {\r\n        const mask = 0xffffffff;\r\n        const maxDistance = 10000000;\r\n        const queryTrigger = true;\r\n\r\n        if (PhysicsSystem.instance.raycast(this.dropRay)) {\r\n            const raycastResults = PhysicsSystem.instance.raycastResults;\r\n            raycastResults.forEach(rayRes => {\r\n                const collider = rayRes.collider;\r\n                if (raycastResults && collider.node.uuid == this.hitArea.uuid) {\r\n                    const hitPoint = rayRes.hitPoint\r\n                    this.createFloor(hitPoint, this.floorSpeed)\r\n\r\n                }\r\n            })\r\n        }\r\n    }\r\n    createFloor(pos: Vec3, speed: Vec3) {\r\n        this.assetMgr.getRes(\"BoxFloor\", Prefab, \"components\").then(data => {\r\n            this.initFloor(data, pos, speed)\r\n        })\r\n    }\r\n    initFloor(floor: Prefab, pos: Vec3, speed: Vec3) {\r\n        if (floor) {\r\n            var obj = this.assetMgr.instantiate(floor);\r\n            this._floorNodes.push(obj);\r\n            obj.setWorldPosition(pos);\r\n            obj.setParent(this.floorContainer, true)\r\n            // rightBody.node.setParent(this.floorContainer, true)\r\n            var rig = obj.getComponent(RigidBody)\r\n            rig.setLinearVelocity(new Vec3(speed.x / 7, speed.y, 0))\r\n            if (!this.DROP_DISTANCE) {\r\n                var mesh = obj.getComponent(MeshRenderer)\r\n                var modelCenter = mesh.model.modelBounds.halfExtents;\r\n                var boxH = modelCenter.y * 2;\r\n                var boxWHalf = modelCenter.x;\r\n                this.DROP_DISTANCE = Math.sqrt(boxH * boxH + boxWHalf * boxWHalf) * this.dropScan\r\n            }\r\n            let collider = obj.getComponent(Collider);\r\n            // 监听触发事件\r\n            // this.scheduleOnce(() => {\r\n            collider.once(\"onCollisionEnter\", this.onCollision, this);\r\n            // }, 0.1)\r\n        }\r\n\r\n    }\r\n\r\n    /**固定楼层 */\r\n    private frozenFloor(rightBody: RigidBody): void {\r\n\r\n        rightBody.type = ERigidBodyType.STATIC;\r\n        rightBody.linearFactor = Vec3.ZERO\r\n        rightBody.angularFactor = Vec3.ZERO\r\n\r\n        // this.scheduleOnce(() => {\r\n\r\n\r\n        // }, 2)\r\n    }\r\n    private connectFloor(floor: Node, preFoor: Node): void {\r\n        var ppc = preFoor.addComponent(PointToPointConstraint)\r\n        var rig = floor.getComponent(RigidBody);\r\n        rig.useGravity = false;\r\n        ppc.connectedBody = rig\r\n        ppc.pivotA = new Vec3(floor.worldPosition.x - preFoor.worldPosition.x, 1, 0)\r\n        this._connectFloors.push(rig)\r\n    }\r\n    removeFloor(floor: Node) {\r\n        this.assetMgr.removeInstant(floor)\r\n        var index = this._floorNodes.indexOf(floor)\r\n        this._floorNodes.splice(index, 1)\r\n    }\r\n    onCollision(event: ICollisionEvent) {\r\n        var lenFloor = this._floorNodes.length\r\n        if (lenFloor > 0) {\r\n            var lastFloor = this._floorNodes[lenFloor - 1];\r\n\r\n            var rightBody = lastFloor.getComponent(RigidBody);\r\n\r\n            if (lenFloor > 1) {\r\n                var preFloor = this._floorNodes[lenFloor - 2];\r\n                var forceDir = lastFloor.worldPosition.x - preFloor.worldPosition.x;\r\n\r\n                var dis = Vec3.distance(preFloor.worldPosition, lastFloor.worldPosition)//Math.abs(preFloor.worldPosition.x - lastFloor.worldPosition.x);\r\n\r\n                if (forceDir > 0) {\r\n\r\n                    this._applyLastFloorForce.x = -dis;\r\n                } else {\r\n\r\n                    this._applyLastFloorForce.x = dis;\r\n                }\r\n\r\n                console.log(\"距离：\" + dis + \",最大距离差：\" + this.DROP_DISTANCE)\r\n                var offset = dis - this.DROP_DISTANCE\r\n                if (offset >= 0) {\r\n                    lastFloor.getComponent(Collider).isTrigger = true;\r\n                    rightBody.angularFactor = Vec3.ZERO\r\n                    var offAngle = (10.0 + (offset / this.DROP_DISTANCE) * 35);\r\n                    // rightBody.linearFactor = Vec3.ONE\r\n                    var forcePos = new Vec3(0, 0, 0);\r\n                    if (preFloor.worldPosition.x < lastFloor.worldPosition.x) {\r\n                        lastFloor.angle = -offAngle;\r\n                        rightBody.setLinearVelocity(new Vec3(1, -2, 2))\r\n                        // Vec3.multiplyScalar(rightBody.linearFactor, Vec3.UNIT_X, 50);\r\n                        forcePos.x = 10;\r\n                        console.log(\"往右掉下来\")\r\n                    } else {\r\n                        forcePos.x = -10;\r\n                        lastFloor.angle = offAngle\r\n                        rightBody.setLinearVelocity(new Vec3(-1, -2, 2))\r\n                        // Vec3.multiplyScalar(rightBody.linearFactor, Vec3.UNIT_X, -50);\r\n                        console.log(\"往左掉下来\")\r\n                    }\r\n\r\n                    var mt = rightBody.getComponent(Collider).material;\r\n                    mt.friction = 0;\r\n                    mt.restitution = 0.1;\r\n                    mt.rollingFriction = 0;\r\n                    mt.spinningFriction = 0.5;\r\n                    this.scheduleOnce(() => {\r\n                        this.removeFloor(lastFloor)\r\n                        this.createNewBox();\r\n\r\n                    }, 2)\r\n                } else {\r\n\r\n                    this.focuseLastFloorPos(lastFloor)\r\n\r\n                    this.frozenFloor(rightBody)\r\n                    var pos = lastFloor.position;\r\n                    //防止碰撞检测延时所以固定了Y\r\n                    lastFloor.setPosition(pos.x, preFloor.position.y + preFloor.getComponent(Collider).center.y * 2, pos.z)\r\n                    lastFloor.rotation = preFloor.rotation;\r\n\r\n                    if (this.checkIsPerfactPos(lastFloor.position.x, preFloor.position.x)) {//完美命中\r\n                        var lastPos = lastFloor.position;\r\n                        lastFloor.setPosition(preFloor.position.x, lastPos.y, lastPos.z)\r\n                        console.log(\"完美命中\")\r\n                    } else {\r\n                        console.log(\"命中\")\r\n                        if (lenFloor > 3) {\r\n                            this.rockHandler(forceDir);\r\n\r\n                        } else {\r\n                            this._floorOffset += forceDir;\r\n                        }\r\n                    }\r\n                    if (lenFloor > 3 && this._isUseJerryState) {\r\n                        lastFloor.getComponent(Mass).enabled = true;\r\n                        this._floorNodes[lenFloor - 4].getComponent(Mass).enabled = false;\r\n                    }\r\n                }\r\n            } else {\r\n                this.focuseLastFloorPos(lastFloor)\r\n                this.frozenFloor(rightBody)\r\n            }\r\n        }\r\n    }\r\n\r\n    checkIsPerfactPos(matchX: number, targetX: number) {\r\n        return Math.abs(matchX - targetX) < 0.05\r\n    }\r\n    /**相机跟踪最后一块楼层 */\r\n    focuseLastFloorPos(floor: Node) {\r\n        var wolrdPos = floor.getWorldPosition();\r\n        wolrdPos.x = this.MAIN_CAMERA_POS.x;\r\n        wolrdPos.z = this.MAIN_CAMERA_POS.z;\r\n        wolrdPos.y += 1.8;\r\n        // this.worldCamera.node.setWorldPosition(wolrdPos)\r\n        tween(this.worldCamera.node).to(0.2, { worldPosition: wolrdPos }).start();\r\n        var hitPos = this.hitArea.getWorldPosition();\r\n        hitPos.y = wolrdPos.y - 3\r\n        this.hitArea.setWorldPosition(hitPos)\r\n\r\n        this.createNewBox();\r\n\r\n    }\r\n    createNewBox() {\r\n        // this.assetMgr.getRes(\"BaseBox\", Prefab, \"components\").then(data => { this.createBox(data) })\r\n        this.assetMgr.getRes(\"BoxFloor\", Prefab, \"components\").then(data => { this.createFloorBox(data) })\r\n    }\r\n    createFloorBox(box: Prefab) {\r\n        if (box) {\r\n            var obj = this.assetMgr.instantiate(box);\r\n            if (obj) {\r\n\r\n                var rig = obj.getComponent(RigidBody);\r\n                rig.angularFactor = Vec3.ZERO;\r\n                // rig.mass = 0.0;\r\n                rig.getComponent(Collider).isTrigger = true;\r\n                rig.useGravity = false;\r\n                this._dropBox = rig;\r\n                var crane = find(\"crane\")\r\n                if (crane) {\r\n                    obj.setParent(this.floorBornPos)\r\n                    obj.layer = Layers.Enum.UI_3D;\r\n\r\n                }\r\n\r\n                // obj.setWorldPosition(this.floorBornPos.worldPosition)\r\n\r\n                // var hc = this.cord.addComponent(HingeConstraint)\r\n                // hc.pivotA = new Vec3(0, -0.5, 0);\r\n                // var collider = obj.getComponent(BoxCollider);\r\n                // var centerB = collider.size\r\n                // hc.pivotB = new Vec3(0, centerB.y, 0);\r\n\r\n                // hc.connectedBody = rig\r\n\r\n                // this.isMove = false;\r\n                this._curTick = 0;\r\n                this._isCanCreateNext = true;\r\n                // boxRight2d.wakeUp();\r\n            }\r\n        }\r\n    }\r\n\r\n    onClickMainUI() {\r\n        console.log(\"点击了\")\r\n\r\n        if (this._isCanCreateNext) {\r\n            var dropFloor = this._dropBox.node\r\n            if (dropFloor) {\r\n\r\n                // var hc = this.cord.getComponent(HingeConstraint)\r\n                // hc.destroy();\r\n\r\n                // this._dropBox.getLinearVelocity(this.floorSpeed)\r\n                this.assetMgr.removeInstant(dropFloor);\r\n\r\n\r\n                console.log(this.floorSpeed)\r\n                this.dropVec = this.cordCamera.worldToScreen(dropFloor.worldPosition)\r\n\r\n                this.worldCamera.screenPointToRay(this.dropVec.x, this.dropVec.y, this.dropRay)\r\n                this.onCheckHitFunc();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**根据偏移值进行处理摇摆效果 */\r\n    rockHandler(offset: number) {\r\n        this._floorOffset += Math.abs(offset) * 3;\r\n\r\n        this.maxRockRotation = Math.atan(this._floorOffset / this._floorNodes[this._floorNodes.length - 1].position.y);\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}