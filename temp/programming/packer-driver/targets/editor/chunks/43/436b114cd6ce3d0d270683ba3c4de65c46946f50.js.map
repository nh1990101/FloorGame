{"version":3,"sources":["file:///D:/Project/cocos/test/assets/script/GameController.ts"],"names":["_decorator","BoxCollider","BoxCollider2D","Camera","Collider","Color","Component","DistanceJoint2D","ERigidBodyType","geometry","Graphics","Input","Node","PhysicsSystem","PlaneCollider","PointToPointConstraint","Prefab","RigidBody","RigidBody2D","tween","UITransform","Vec2","Vec3","AssetMgr","ccclass","property","GameController","displayName","dj2d","beRotateObj","scanAngle","_moveDir","distance","forceVec","_curTick","disForceTime","MaxAngle","DOWN_DIR","DROP_DISTANCE","HOLDER_BASE_POS","MAIN_CAMERA_POS","FORCE_CONTAINER_TIME","HOLDER_DIS_POS_Y","isMove","myPosBegin","myTargetPoint","dropRay","floorSpeed","dropVec","_floorNodes","_isCanCreateNext","_failFloor","_failForcePos","_floorContainerGav","_forceContainerTime","_floorContainerForce","_applyLastFloorForce","_connectFloors","_maxContainerRo","_targetContainerRo","_floorOffset","_preOffSet","start","assetMgr","preLoadBundles","then","createNewBox","bind","staticBody","distance2D","getComponent","myGraph","lineWidth","lineCap","LineCap","ROUND","strokeColor","BLUE","Ray","holder","setPosition","worldCamera","node","floorCollider","floorTemp","material","restitution","sharedMaterial","mainUI","on","EventType","TOUCH_START","onClickMainUI","update","deltaTime","clear","uiGraph","baseBox","getPosition","x","anchor","y","moveTo","connectedAnchor","lineTo","stroke","applyForceToCenter","applyForce","containerRig","floorContainer","ro","Math","abs","eulerAngles","z","vecRo","getLinearVelocity","linearDamping","onCheckHitFunc","mask","maxDistance","queryTrigger","instance","raycast","raycastResults","forEach","rayRes","collider","uuid","hitArea","hitPoint","createFloor","pos","speed","getRes","data","initFloor","floor","obj","instantiate","push","setWorldPosition","setParent","rig","setLinearVelocity","boxW","scale","boxH","boxWHalf","sqrt","once","onCollision","frozenFloor","rightBody","type","STATIC","linearFactor","ZERO","angularFactor","connectFloor","preFoor","ppc","addComponent","useGravity","connectedBody","pivotA","worldPosition","removeFloor","removeInstant","index","indexOf","splice","event","lenFloor","length","lastFloor","boxCollider","preFloor","forceDir","dis","console","log","ONE","forcePos","scheduleOnce","focuseLastFloorPos","checkIsPerfactPos","position","lastPos","rockReduce","rockHandler","rotation","matchX","targetX","wolrdPos","getWorldPosition","to","hitPos","createBox","box","boxRight2d","enabled","autoCalcDistance","maxLength","parent","updateWorldTransform","convertToUINode","uiCamera","worldToScreen","screenPointToRay","linearVelocity","offset","strResult","rockAdd","floorRockRate","floorRockForce","reduceRate","floorRockDamping"],"mappings":"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","sourcesContent":["import { _decorator, BoxCollider, BoxCollider2D, Camera, Canvas, cclegacy, Collider, Color, Component, director, DistanceJoint2D, ERigidBody2DType, ERigidBodyType, geometry, Graphics, HingeJoint2D, ICollisionEvent, Input, instantiate, Node, PhysicsSystem, PlaneCollider, PointToPointConstraint, Prefab, Quat, resources, RigidBody, RigidBody2D, Size, Sprite, tween, Tween, UITransform, Vec2, Vec3 } from 'cc';\r\nimport { AssetMgr } from './AssetMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n    @property(AssetMgr)\r\n    public assetMgr: AssetMgr;\r\n    @property(RigidBody2D)\r\n    public baseBox: RigidBody2D;\r\n    @property(RigidBody2D)\r\n    public staticBody: RigidBody2D;\r\n    @property(Graphics)\r\n    public myGraph: Graphics;\r\n    @property(Graphics)\r\n    public uiGraph: Graphics;\r\n    @property(Node)\r\n    public mainUI: Node;\r\n    @property(Camera)\r\n    public worldCamera: Camera;\r\n    @property(Camera)\r\n    public uiCamera: Camera;\r\n    @property(UITransform)\r\n    public uiTransform: UITransform;\r\n    @property(Node)\r\n    public holder: Node;\r\n    @property(Node)\r\n    public hitArea: Node;\r\n    @property(Node)\r\n    public floorTemp: Node;\r\n    @property(Node)\r\n    public testNode: Node;\r\n    @property(Node)\r\n    public firstFloor: Node;\r\n    @property(Node)\r\n    public floorStatic: Node;\r\n    @property(Node)\r\n    public floorContainer: Node;\r\n    @property({displayName:\"命中衰减振幅系数\"})\r\n    /**命中衰减振幅系数 */\r\n    public reduceRate = 0.1;\r\n    @property({displayName:\"楼层高度振幅系数\"})\r\n    /**楼层高度振幅系数 */\r\n    public floorRockRate = 0.2;\r\n    @property({displayName:\"振幅衰减阻尼系数\"})\r\n    /**振幅衰减阻尼系数 */\r\n    public floorRockDamping = 0.5;\r\n    /**振幅系数 */\r\n    @property({displayName:\"振幅系数\"})\r\n    public floorRockForce = 1;\r\n    protected dj2d: DistanceJoint2D;\r\n    protected beRotateObj: RigidBody2D\r\n    private scanAngle: Vec3;\r\n    private _moveDir: number = 50;\r\n    private readonly distance = 300;\r\n    // private localCenter: Vec2;\r\n    private forceVec: Vec2;\r\n    private _curTick = 0;\r\n    private readonly disForceTime = 2;\r\n    private readonly MaxAngle = 30;\r\n    private readonly DOWN_DIR = new Vec3(0, -1, 0)\r\n    /**掉落判断偏移值 */\r\n    private DROP_DISTANCE: number;\r\n    private readonly HOLDER_BASE_POS = new Vec3(0, 700, 0)\r\n    private readonly MAIN_CAMERA_POS = new Vec3(0, 3, 16)\r\n    private readonly FORCE_CONTAINER_TIME = 1;\r\n    // public MAX_DISTANCE: number;\r\n    private HOLDER_DIS_POS_Y: number;\r\n    private isMove = false;\r\n    private myPosBegin: Vec3;\r\n    private myTargetPoint: Vec3;\r\n    private dropRay: geometry.Ray\r\n    private floorSpeed: Vec2;\r\n    private dropVec: Vec3;\r\n    private _floorNodes: Node[];\r\n    private _isCanCreateNext: boolean = true;\r\n    private _failFloor: RigidBody;\r\n    private _failForcePos: Vec3;\r\n    private _floorContainerGav = new Vec3(0, 20, 0)\r\n    private _forceContainerTime = 0;\r\n    private _floorContainerForce = new Vec3(1, 0, 0)\r\n\r\n    private _applyLastFloorForce = new Vec3(0.2, 0, 0)\r\n    private _connectFloors: RigidBody[] = [];\r\n    private _maxContainerRo: number = 0;\r\n    private _targetContainerRo = 0;\r\n    private _floorOffset = 0;\r\n    start() {\r\n        this.assetMgr.preLoadBundles().then(this.createNewBox.bind(this));\r\n        // PhysicsSystem.instance.restitution=\r\n        if (this.staticBody) {\r\n            var distance2D = this.staticBody.getComponent(DistanceJoint2D)\r\n            this.dj2d = distance2D;\r\n            this.forceVec = new Vec2(this._moveDir, 0);\r\n            this.myGraph.lineWidth = 10;\r\n            this.myGraph.lineCap = Graphics.LineCap.ROUND;\r\n            this.myGraph.strokeColor = Color.BLUE;\r\n            this.myPosBegin = new Vec3();\r\n            this.myTargetPoint = new Vec3();\r\n            this.dropRay = new geometry.Ray\r\n            this._floorNodes = [];\r\n            this.holder.setPosition(this.HOLDER_BASE_POS);\r\n            this.worldCamera.node.setPosition(this.MAIN_CAMERA_POS)\r\n            var floorCollider = this.floorTemp.getComponent(PlaneCollider)\r\n            floorCollider.material.restitution = 0;\r\n            floorCollider.sharedMaterial.restitution = 0;\r\n\r\n\r\n            // this.floorContainer.getComponent(RigidBody).applyLocalTorque(new Vec3(0, 0, 100))\r\n            // let tweenDuration: number = 2.0;\r\n            // let angle = 2;\r\n\r\n\r\n            // let embedTween = tween(this.floorTemp).to(tweenDuration, { eulerAngles: new Vec3(0, 0, angle * 2) }, { easing: \"cubicOut\" }).to(tweenDuration, { eulerAngles: new Vec3(0, 0, -angle * 2) }, { easing: \"cubicOut\" }).union();\r\n\r\n\r\n\r\n            // tween(this.floorTemp).to(tweenDuration / 2, { eulerAngles: new Vec3(0, 0, -angle) }, { easing: \"cubicOut\" }).call(() => {\r\n            //     embedTween.repeatForever().start();\r\n            // }).start();\r\n        }\r\n        this.mainUI.on(Input.EventType.TOUCH_START, this.onClickMainUI, this)\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n        this.myGraph.clear();\r\n        this.uiGraph.clear();\r\n        if (this.baseBox) {\r\n\r\n            this.myPosBegin = this.staticBody.node.getPosition()\r\n            this.myTargetPoint = this.baseBox.node.getPosition();\r\n            // console.log(\"BaseBox=>x=\" + this.myTargetPoint.x + \",y=\" + this.myTargetPoint.y + \",z=\" + this.myTargetPoint.z);\r\n            // console.log(\"Holder=>x=\" + this.holder.position.x + \",y=\" + this.holder.position.y + \",z=\" + this.holder.position.z);\r\n            this.myPosBegin.x += this.dj2d.anchor.x\r\n            this.myPosBegin.y += this.dj2d.anchor.y\r\n\r\n            this.myGraph.moveTo(this.myPosBegin.x, this.myPosBegin.y);\r\n\r\n            this.myTargetPoint.x += this.dj2d.connectedAnchor.x\r\n            this.myTargetPoint.y += this.dj2d.connectedAnchor.y\r\n            this.myGraph.lineTo(this.myTargetPoint.x, this.myTargetPoint.y);\r\n            this.myGraph.stroke();\r\n\r\n\r\n            this._curTick += deltaTime;\r\n            if (!this.isMove) {\r\n                this.baseBox.applyForceToCenter(this.forceVec, true);\r\n                if (this._curTick > this.disForceTime) {\r\n\r\n                    this.isMove = true;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this._failFloor) {\r\n\r\n            this._failFloor.applyForce(this._failForcePos)\r\n        }\r\n        this._forceContainerTime += deltaTime\r\n        let containerRig = this.floorContainer.getComponent(RigidBody);\r\n        if (this._floorOffset > 0 && this._forceContainerTime < this.FORCE_CONTAINER_TIME) {\r\n\r\n            containerRig.applyForce(this._floorContainerForce)\r\n        }\r\n        containerRig.applyForce(this._floorContainerGav)\r\n\r\n        let ro = Math.abs(this.floorContainer.eulerAngles.z);\r\n        let vecRo: Vec3 = new Vec3;\r\n        containerRig.getLinearVelocity(vecRo)\r\n        if (Math.abs(vecRo.x) <= 0.01) {\r\n            this._maxContainerRo = ro;\r\n        }\r\n        if (this._maxContainerRo <= this._targetContainerRo && this._targetContainerRo > 0) {\r\n            containerRig.linearDamping = 0;\r\n        }\r\n\r\n\r\n    }\r\n    onCheckHitFunc() {\r\n        const mask = 0xffffffff;\r\n        const maxDistance = 10000000;\r\n        const queryTrigger = true;\r\n\r\n        if (PhysicsSystem.instance.raycast(this.dropRay)) {\r\n            const raycastResults = PhysicsSystem.instance.raycastResults;\r\n            raycastResults.forEach(rayRes => {\r\n                const collider = rayRes.collider;\r\n                if (raycastResults && collider.node.uuid == this.hitArea.uuid) {\r\n                    const hitPoint = rayRes.hitPoint\r\n                    this.createFloor(hitPoint, this.floorSpeed)\r\n\r\n                }\r\n            })\r\n        }\r\n    }\r\n    createFloor(pos: Vec3, speed: Vec2) {\r\n        this.assetMgr.getRes(\"BoxFloor\", Prefab, \"components\").then(data => {\r\n            this.initFloor(data, pos, speed)\r\n        })\r\n    }\r\n    initFloor(floor: Prefab, pos: Vec3, speed: Vec2) {\r\n        if (floor) {\r\n            var obj = this.assetMgr.instantiate(floor);\r\n\r\n            this._floorNodes.push(obj);\r\n            obj.setWorldPosition(pos);\r\n            obj.setParent(this.floorContainer, true)\r\n            // rightBody.node.setParent(this.floorContainer, true)\r\n            var rig = obj.getComponent(RigidBody)\r\n            rig.setLinearVelocity(new Vec3(speed.x / 7, speed.y, 0))\r\n            if (!this.DROP_DISTANCE) {\r\n                var boxW = obj.scale.x;\r\n                var boxH = obj.scale.y;\r\n                var boxWHalf = boxW / 2;\r\n                this.DROP_DISTANCE = Math.sqrt(boxH * boxH + boxWHalf * boxWHalf)\r\n            }\r\n            let collider = obj.getComponent(Collider);\r\n            // collider.material.restitution = 0;\r\n\r\n            // collider.material.friction = 0.9\r\n            // collider.material.rollingFriction = 0.1;\r\n            // collider.material.spinningFriction = 0.1;\r\n\r\n\r\n            // collider.sharedMaterial.restitution = 0;\r\n            // 监听触发事件\r\n            collider.once(\"onCollisionEnter\", this.onCollision, this);\r\n        }\r\n\r\n    }\r\n\r\n    /**固定楼层 */\r\n    private frozenFloor(rightBody: RigidBody): void {\r\n\r\n        rightBody.type = ERigidBodyType.STATIC;\r\n        rightBody.linearFactor = Vec3.ZERO\r\n        rightBody.angularFactor = Vec3.ZERO\r\n        // this.scheduleOnce(() => {\r\n\r\n\r\n        // }, 2)\r\n    }\r\n    private connectFloor(floor: Node, preFoor: Node): void {\r\n        var ppc = preFoor.addComponent(PointToPointConstraint)\r\n        var rig = floor.getComponent(RigidBody);\r\n        rig.useGravity = false;\r\n        ppc.connectedBody = rig\r\n        ppc.pivotA = new Vec3(floor.worldPosition.x - preFoor.worldPosition.x, 1, 0)\r\n        this._connectFloors.push(rig)\r\n    }\r\n    removeFloor(floor: Node) {\r\n        this.assetMgr.removeInstant(floor)\r\n        var index = this._floorNodes.indexOf(floor)\r\n        this._floorNodes.splice(index, 1)\r\n    }\r\n    onCollision(event: ICollisionEvent) {\r\n        var lenFloor = this._floorNodes.length\r\n        if (lenFloor > 0) {\r\n            var lastFloor = this._floorNodes[lenFloor - 1];\r\n\r\n            var rightBody = lastFloor.getComponent(RigidBody);\r\n            var boxCollider = rightBody.getComponent(BoxCollider)\r\n\r\n\r\n            if (lenFloor > 1) {\r\n                var preFloor = this._floorNodes[lenFloor - 2];\r\n                var forceDir = lastFloor.worldPosition.x - preFloor.worldPosition.x;\r\n\r\n                var dis = Vec3.distance(preFloor.worldPosition, lastFloor.worldPosition)//Math.abs(preFloor.worldPosition.x - lastFloor.worldPosition.x);\r\n\r\n                if (forceDir > 0) {\r\n\r\n                    this._applyLastFloorForce.x = -dis;\r\n                } else {\r\n\r\n                    this._applyLastFloorForce.x = dis;\r\n                }\r\n\r\n                console.log(\"距离：\" + dis + \",最大距离差：\" + this.DROP_DISTANCE)\r\n                if (dis >= this.DROP_DISTANCE) {\r\n                    rightBody.angularFactor = Vec3.ONE\r\n\r\n                    var forcePos = new Vec3(0, 0, 0);\r\n                    if (preFloor.worldPosition.x < lastFloor.worldPosition.x) {\r\n                        forcePos.x = 10;\r\n                        console.log(\"往右掉下来\")\r\n                    } else {\r\n                        forcePos.x = -10;\r\n                        console.log(\"往左掉下来\")\r\n                    }\r\n                    this._failForcePos = forcePos;\r\n                    this._failFloor = rightBody;\r\n                    this.scheduleOnce(() => {\r\n                        this.removeFloor(lastFloor)\r\n                        this.createNewBox();\r\n                        this._failFloor = null;\r\n                    }, 2)\r\n                } else {\r\n                    this.focuseLastFloorPos(lastFloor)\r\n\r\n                    this.frozenFloor(rightBody)\r\n\r\n                    if (this.checkIsPerfactPos(lastFloor.position.x, preFloor.position.x)) {//完美命中\r\n                        var lastPos = lastFloor.position;\r\n                        lastFloor.setPosition(preFloor.position.x, lastPos.y, lastPos.z)\r\n                        this.rockReduce();\r\n                        console.log(\"完美命中\")\r\n                    } else {\r\n                        if (lenFloor > 3) {\r\n                            this.rockHandler(forceDir);\r\n                        } else {\r\n                            this._floorOffset += forceDir;\r\n                        }\r\n                    }\r\n                    rightBody.node.rotation = preFloor.rotation\r\n                }\r\n            } else {\r\n                this.focuseLastFloorPos(lastFloor)\r\n                this.frozenFloor(rightBody)\r\n            }\r\n        }\r\n    }\r\n    checkIsPerfactPos(matchX: number, targetX: number) {\r\n        return Math.abs(matchX - targetX) < 0.05\r\n    }\r\n    /**相机跟踪最后一块楼层 */\r\n    focuseLastFloorPos(floor: Node) {\r\n        var wolrdPos = floor.getWorldPosition();\r\n        wolrdPos.x = this.MAIN_CAMERA_POS.x;\r\n        wolrdPos.z = this.MAIN_CAMERA_POS.z;\r\n        wolrdPos.y += 0.8;\r\n        // this.worldCamera.node.setWorldPosition(wolrdPos)\r\n        tween(this.worldCamera.node).to(0.2, { worldPosition: wolrdPos }).start();\r\n        var hitPos = this.hitArea.getWorldPosition();\r\n        hitPos.y = wolrdPos.y - 3\r\n        this.hitArea.setWorldPosition(hitPos)\r\n\r\n        // var pos = this.worldCamera.convertToUINode(this.worldCamera.node.getWorldPosition(), this.mainUI)\r\n        // pos.x = this.HOLDER_BASE_POS.x;\r\n        // pos.z = this.HOLDER_BASE_POS.z;\r\n        // pos.y += this.HOLDER_DIS_POS_Y;\r\n        // this.holder.setPosition(pos)\r\n        this.createNewBox();\r\n\r\n    }\r\n    createNewBox() {\r\n        this.assetMgr.getRes(\"BaseBox\", Prefab, \"components\").then(data => { this.createBox(data) })\r\n    }\r\n    createBox(box: Prefab) {\r\n        if (box) {\r\n            var obj = this.assetMgr.instantiate(box);\r\n            var boxRight2d = obj.getComponent(RigidBody2D);\r\n            if (boxRight2d) {\r\n                // boxRight2d.sleep();\r\n                // this.holder.active=false;\r\n                this.dj2d.enabled = false;\r\n\r\n                this.dj2d.connectedBody = boxRight2d\r\n                this.dj2d.autoCalcDistance = false;\r\n                this.dj2d.maxLength = this.distance;\r\n                boxRight2d.node.parent = this.holder;\r\n                boxRight2d.node.setPosition(new Vec3(0, -this.distance, 0))\r\n                // this.holder.active=true;\r\n                this.dj2d.enabled = true;\r\n                this.holder.updateWorldTransform();\r\n                this.baseBox = boxRight2d\r\n                this.isMove = false;\r\n                this._curTick = 0;\r\n                this._isCanCreateNext = true;\r\n                // boxRight2d.wakeUp();\r\n            }\r\n        }\r\n    }\r\n    onClickMainUI() {\r\n        console.log(\"点击了\")\r\n\r\n        if (!this.HOLDER_DIS_POS_Y) {\r\n            var pos = this.worldCamera.convertToUINode(this.worldCamera.node.getWorldPosition(), this.mainUI)\r\n            this.HOLDER_DIS_POS_Y = this.HOLDER_BASE_POS.y - pos.y;\r\n        }\r\n\r\n        if (this.baseBox && this._isCanCreateNext) {\r\n            this._isCanCreateNext = false;\r\n            this.dj2d.enabled = false;\r\n            var collider = this.baseBox.getComponent(BoxCollider2D)\r\n            this.dropVec = this.baseBox.node.getWorldPosition();\r\n            // var screenP = new Vec3();\r\n\r\n            this.dropVec = this.uiCamera.worldToScreen(this.dropVec)\r\n\r\n            this.worldCamera.screenPointToRay(this.dropVec.x, this.dropVec.y, this.dropRay);\r\n\r\n            this.floorSpeed = this.baseBox.linearVelocity;\r\n\r\n\r\n            this.assetMgr.removeInstant(collider.node);\r\n            this.baseBox = null;\r\n            this.onCheckHitFunc();\r\n\r\n        }\r\n    }\r\n    private _preOffSet = 0;\r\n    /**根据偏移值进行处理摇摆效果 */\r\n    rockHandler(offset: number) {\r\n        this._floorOffset += offset;\r\n        var strResult = \"\"\r\n        if (Math.abs(this._preOffSet) < Math.abs(offset) || this._targetContainerRo == 0) {\r\n            this.rockAdd(offset);\r\n            strResult = \"加角度\"\r\n        } else {\r\n            this.rockReduce();\r\n            strResult = \"减角度\"\r\n        }\r\n        this._preOffSet = offset;\r\n        console.log(strResult + \"，Maxrotation：\" + this._maxContainerRo + \",目标角度：\" + this._targetContainerRo + \"偏移值：\" + this._floorOffset);\r\n    }\r\n    rockAdd(offset: number) {\r\n        var rig = this.floorContainer.getComponent(RigidBody)\r\n        this._floorContainerForce.x = offset * (1 / (this._floorNodes.length * this.floorRockRate)) * this.floorRockForce\r\n        this._forceContainerTime = 0;\r\n        rig.linearDamping = 0;\r\n    }\r\n    rockReduce() {\r\n        var rig = this.floorContainer.getComponent(RigidBody)\r\n        let reduceRate = 1 - this.reduceRate\r\n        this._targetContainerRo = this._maxContainerRo * reduceRate\r\n        rig.linearDamping = this.floorRockDamping;\r\n    }\r\n}\r\n\r\n"]}